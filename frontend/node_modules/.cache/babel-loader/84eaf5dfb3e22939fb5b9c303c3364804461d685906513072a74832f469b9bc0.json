{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rares Manolescu\\\\Desktop\\\\blockchain-property-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, useNavigate, Navigate, useLocation } from \"react-router-dom\";\n// import Login from \"./components/Login\";\n// import Inventory from \"./components/Inventory\";\n// import Transfer from \"./components/Transfer\";\n// import About from \"./components/About\";\n// import Navbar from \"./components/Navbar\";\n\n// function MainAppWrapper() {\n//   const [showAccountModal, setShowAccountModal] = useState(false);\n//   const [walletAddress, setWalletAddress] = useState(\"\"); // Set by Inventory/Transfer\n//   const navigate = useNavigate();\n\n//   const handleSearch = (query) => {\n//     navigate(`/inventory?search=${encodeURIComponent(query)}`);\n//   };\n\n//   const handleLogout = () => {\n//     navigate(\"/\");\n//     // Add your state reset logic here if needed\n//   };\n\n//   return (\n//     <>\n//       <Navbar\n//         onSearch={handleSearch}\n//         walletAddress={walletAddress}\n//         onLogout={handleLogout}\n//         showAccountModal={showAccountModal}\n//         setShowAccountModal={setShowAccountModal}\n//       />\n//       <Routes>\n//         <Route path=\"/inventory\" element={<Inventory setWalletAddress={setWalletAddress} />} />\n//         <Route path=\"/transfer\" element={<Transfer setWalletAddress={setWalletAddress} />} />\n//         <Route path=\"/about\" element={<About />} />\n//         <Route path=\"*\" element={<Navigate to=\"/inventory\" />} />\n//       </Routes>\n//     </>\n//   );\n// }\n\n// export default function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={<Login />} />\n//         <Route path=\"/*\" element={<MainAppWrapper />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import Login from \"./components/Login\";\n// import Inventory from \"./components/Inventory\";\n// import Transfer from \"./components/Transfer\";\n// import About from \"./components/About\"; // if you have an About page/component\n// import Navbar from \"./components/Navbar\"; // if you use a modern navbar (optional)\n\n// // Optional: Global state for user\n// function App() {\n//   const [user, setUser] = useState(null);\n\n//   return (\n//     <Router>\n//       {user && <Navbar user={user} setUser={setUser} />} {/* Hide navbar if not logged in */}\n//       <Routes>\n//         <Route path=\"/\" element={<Login onLogin={setUser} />} />\n//         <Route\n//           path=\"/inventory\"\n//           element={user ? <Inventory user={user} /> : <Navigate to=\"/\" />}\n//         />\n//         <Route\n//           path=\"/transfer\"\n//           element={user ? <Transfer user={user} /> : <Navigate to=\"/\" />}\n//         />\n//         <Route path=\"/about\" element={<About />} />\n//         {/* Fallback to login */}\n//         <Route path=\"*\" element={<Navigate to=\"/\" />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n// export default App;\n\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\n// import Login from \"./components/Login\";\n// import Inventory from \"./components/Inventory\";\n// import Transfer from \"./components/Transfer\";\n// import About from \"./components/About\";\n// import Navbar from \"./components/Navbar\";\n\n// export default function App() {\n//   const [user, setUser] = useState(null);\n\n//   return (\n//     <Router>\n//       {user && <Navbar user={user} setUser={setUser} />}\n//       <Routes>\n//         <Route path=\"/\" element={user ? <Navigate to=\"/inventory\" /> : <Login onLogin={setUser} />} />\n//         <Route path=\"/inventory\" element={user ? <Inventory user={user} /> : <Navigate to=\"/\" />} />\n//         <Route path=\"/transfer\" element={user ? <Transfer user={user} /> : <Navigate to=\"/\" />} />\n//         <Route path=\"/about\" element={<About />} />\n//         <Route path=\"*\" element={<Navigate to=\"/\" />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Inventory from \"./components/Inventory\";\nimport Transfer from \"./components/Transfer\";\nimport About from \"./components/About\";\nimport Login from \"./components/Login\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [search, setSearch] = useState(\"\"); // <-- added for search\n  const handleLogout = () => setUser(null);\n\n  // Optionally pass handleSearch, but Inventory will do actual search/filtering\n  const handleSearch = e => {\n    e.preventDefault();\n    // You could handle global search here, but better to handle in Inventory.\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [user && /*#__PURE__*/_jsxDEV(Navbar, {\n      user: user,\n      onLogout: handleLogout,\n      search: search,\n      setSearch: setSearch,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: !user ? /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: setUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/inventory\",\n          element: /*#__PURE__*/_jsxDEV(Inventory, {\n            user: user,\n            search: search,\n            setSearch: setSearch,\n            handleSearch: handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/transfer\",\n          element: /*#__PURE__*/_jsxDEV(Transfer, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/inventory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"o1018B7RDOcEvylThrj/MDyeI9g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","Navbar","Inventory","Transfer","About","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","setUser","search","setSearch","handleLogout","handleSearch","e","preventDefault","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogin","to","_c","$RefreshReg$"],"sources":["C:/Users/Rares Manolescu/Desktop/blockchain-property-app/frontend/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { BrowserRouter as Router, Routes, Route, useNavigate, Navigate, useLocation } from \"react-router-dom\";\r\n// import Login from \"./components/Login\";\r\n// import Inventory from \"./components/Inventory\";\r\n// import Transfer from \"./components/Transfer\";\r\n// import About from \"./components/About\";\r\n// import Navbar from \"./components/Navbar\";\r\n\r\n// function MainAppWrapper() {\r\n//   const [showAccountModal, setShowAccountModal] = useState(false);\r\n//   const [walletAddress, setWalletAddress] = useState(\"\"); // Set by Inventory/Transfer\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSearch = (query) => {\r\n//     navigate(`/inventory?search=${encodeURIComponent(query)}`);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     navigate(\"/\");\r\n//     // Add your state reset logic here if needed\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Navbar\r\n//         onSearch={handleSearch}\r\n//         walletAddress={walletAddress}\r\n//         onLogout={handleLogout}\r\n//         showAccountModal={showAccountModal}\r\n//         setShowAccountModal={setShowAccountModal}\r\n//       />\r\n//       <Routes>\r\n//         <Route path=\"/inventory\" element={<Inventory setWalletAddress={setWalletAddress} />} />\r\n//         <Route path=\"/transfer\" element={<Transfer setWalletAddress={setWalletAddress} />} />\r\n//         <Route path=\"/about\" element={<About />} />\r\n//         <Route path=\"*\" element={<Navigate to=\"/inventory\" />} />\r\n//       </Routes>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default function App() {\r\n//   return (\r\n//     <Router>\r\n//       <Routes>\r\n//         <Route path=\"/\" element={<Login />} />\r\n//         <Route path=\"/*\" element={<MainAppWrapper />} />\r\n//       </Routes>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\n// import Login from \"./components/Login\";\r\n// import Inventory from \"./components/Inventory\";\r\n// import Transfer from \"./components/Transfer\";\r\n// import About from \"./components/About\"; // if you have an About page/component\r\n// import Navbar from \"./components/Navbar\"; // if you use a modern navbar (optional)\r\n\r\n// // Optional: Global state for user\r\n// function App() {\r\n//   const [user, setUser] = useState(null);\r\n\r\n//   return (\r\n//     <Router>\r\n//       {user && <Navbar user={user} setUser={setUser} />} {/* Hide navbar if not logged in */}\r\n//       <Routes>\r\n//         <Route path=\"/\" element={<Login onLogin={setUser} />} />\r\n//         <Route\r\n//           path=\"/inventory\"\r\n//           element={user ? <Inventory user={user} /> : <Navigate to=\"/\" />}\r\n//         />\r\n//         <Route\r\n//           path=\"/transfer\"\r\n//           element={user ? <Transfer user={user} /> : <Navigate to=\"/\" />}\r\n//         />\r\n//         <Route path=\"/about\" element={<About />} />\r\n//         {/* Fallback to login */}\r\n//         <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n//       </Routes>\r\n//     </Router>\r\n//   );\r\n// }\r\n// export default App;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\r\n// import Login from \"./components/Login\";\r\n// import Inventory from \"./components/Inventory\";\r\n// import Transfer from \"./components/Transfer\";\r\n// import About from \"./components/About\";\r\n// import Navbar from \"./components/Navbar\";\r\n\r\n// export default function App() {\r\n//   const [user, setUser] = useState(null);\r\n\r\n//   return (\r\n//     <Router>\r\n//       {user && <Navbar user={user} setUser={setUser} />}\r\n//       <Routes>\r\n//         <Route path=\"/\" element={user ? <Navigate to=\"/inventory\" /> : <Login onLogin={setUser} />} />\r\n//         <Route path=\"/inventory\" element={user ? <Inventory user={user} /> : <Navigate to=\"/\" />} />\r\n//         <Route path=\"/transfer\" element={user ? <Transfer user={user} /> : <Navigate to=\"/\" />} />\r\n//         <Route path=\"/about\" element={<About />} />\r\n//         <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n//       </Routes>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Inventory from \"./components/Inventory\";\r\nimport Transfer from \"./components/Transfer\";\r\nimport About from \"./components/About\";\r\nimport Login from \"./components/Login\";\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [search, setSearch] = useState(\"\"); // <-- added for search\r\n  const handleLogout = () => setUser(null);\r\n\r\n  // Optionally pass handleSearch, but Inventory will do actual search/filtering\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    // You could handle global search here, but better to handle in Inventory.\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      {user && (\r\n        <Navbar\r\n          user={user}\r\n          onLogout={handleLogout}\r\n          search={search}\r\n          setSearch={setSearch}\r\n          handleSearch={handleSearch}\r\n        />\r\n      )}\r\n      <Routes>\r\n        {!user ? (\r\n          <Route path=\"*\" element={<Login onLogin={setUser} />} />\r\n        ) : (\r\n          <>\r\n            <Route\r\n              path=\"/inventory\"\r\n              element={\r\n                <Inventory\r\n                  user={user}\r\n                  search={search}\r\n                  setSearch={setSearch}\r\n                  handleSearch={handleSearch}\r\n                />\r\n              }\r\n            />\r\n            <Route path=\"/transfer\" element={<Transfer user={user} />} />\r\n            <Route path=\"/about\" element={<About />} />\r\n            <Route path=\"*\" element={<Navigate to=\"/inventory\" />} />\r\n          </>\r\n        )}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}