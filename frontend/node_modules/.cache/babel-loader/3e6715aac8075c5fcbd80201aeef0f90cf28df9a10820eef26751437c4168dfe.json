{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rares Manolescu\\\\Desktop\\\\blockchain-property-app\\\\frontend\\\\src\\\\components\\\\Inventory.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { getProvider, getMyNFTs, getEthBalance } from \"../contractUtils\";\n// import { motion, AnimatePresence } from \"framer-motion\";\n\n// export default function Inventory({ user, search, setSearch }) {\n//   const [address, setAddress] = useState(null);\n//   const [cars, setCars] = useState([]);\n//   const [houses, setHouses] = useState([]);\n//   const [balance, setBalance] = useState(\"0\");\n//   const [modalNft, setModalNft] = useState(null);\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       const provider = await getProvider();\n//       const signer = provider.getSigner();\n//       const userAddress = await signer.getAddress();\n//       setAddress(userAddress);\n//       const nfts = await getMyNFTs(userAddress);\n//       setCars(nfts.filter(nft => nft.itemType === \"car\"));\n//       setHouses(nfts.filter(nft => nft.itemType === \"house\"));\n//       if (\n//         userAddress &&\n//         typeof userAddress === \"string\" &&\n//         userAddress.startsWith(\"0x\") &&\n//         userAddress.length === 42\n//       ) {\n//         setBalance(await getEthBalance(userAddress));\n//       }\n//     }\n//     fetchData();\n//   }, [user]);\n\n//   const s = (search || \"\").trim().toLowerCase();\n//   const filteredHouses = !s\n//     ? houses\n//     : houses.filter(\n//         nft =>\n//           nft.name.toLowerCase().includes(s) ||\n//           (nft.addr && nft.addr.toLowerCase().includes(s))\n//       );\n//   const filteredCars = !s\n//     ? cars\n//     : cars.filter(\n//         nft =>\n//           nft.name.toLowerCase().includes(s) ||\n//           (nft.vin && nft.vin.toLowerCase().includes(s))\n//       );\n\n//   const getTypeIcon = (type) => type === \"car\" ? \"üöó\" : \"üè†\";\n\n//   // Framer Motion variants\n//   const overlayVariants = {\n//     hidden: { opacity: 0 },\n//     visible: { opacity: 1 },\n//     exit: { opacity: 0 }\n//   };\n//   const modalVariants = {\n//     hidden: { y: 40, opacity: 0, scale: 0.93 },\n//     visible: { y: 0, opacity: 1, scale: 1, transition: { type: \"spring\", stiffness: 410, damping: 30 } },\n//     exit: { y: 40, opacity: 0, scale: 0.93 }\n//   };\n\n//   return (\n//     <div className=\"inventory-bg\">\n//       <div className=\"inventory-content\">\n//         <h1 className=\"inventory-title\">Your Properties</h1>\n//         <div className=\"inventory-desc\">\n//           View your owned houses and cars below. Use the Transfer tab to send an item.\n//         </div>\n//         <div>\n//           <div className=\"section-title\">Houses</div>\n//           <div className=\"card-grid\">\n//             {filteredHouses.length === 0 && <span className=\"inventory-empty\">No houses found.</span>}\n//             {filteredHouses.map((nft) => (\n//               <div\n//                 key={nft.tokenId}\n//                 className=\"asset-card\"\n//                 onClick={() => setModalNft(nft)}\n//                 style={{ cursor: \"pointer\" }}\n//               >\n//                 <div className=\"asset-type\">üè†</div>\n//                 <div className=\"asset-title name-animate\">{nft.name}</div>\n//                 <div className=\"asset-detail\">\n//                   Worth: <span className=\"asset-money\">${nft.value?.toLocaleString?.() ?? nft.value}</span>\n//                 </div>\n//                 <div className=\"asset-detail\">Purchased: {nft.purchaseDate}</div>\n//                 <div className=\"asset-detail\">Address: {nft.addr}</div>\n//                 <div className=\"asset-id\">NFT ID: {nft.tokenId}</div>\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//         <div className=\"section-title\" style={{ marginTop: 32 }}>Cars</div>\n//         <div className=\"card-grid\">\n//           {filteredCars.length === 0 && <span className=\"inventory-empty\">No cars found.</span>}\n//           {filteredCars.map((nft) => (\n//             <div\n//               key={nft.tokenId}\n//               className=\"asset-card\"\n//               onClick={() => setModalNft(nft)}\n//               style={{ cursor: \"pointer\" }}\n//             >\n//               <div className=\"asset-type\">üöó</div>\n//               <div className=\"asset-title name-animate\">{nft.name}</div>\n//               <div className=\"asset-detail\">\n//                 Worth: <span className=\"asset-money\">${nft.value?.toLocaleString?.() ?? nft.value}</span>\n//               </div>\n//               <div className=\"asset-detail\">Purchased: {nft.purchaseDate}</div>\n//               <div className=\"asset-detail\">VIN: {nft.vin}</div>\n//               <div className=\"asset-id\">NFT ID: {nft.tokenId}</div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n\n//       {/* --- MODAL POPUP with framer-motion --- */}\n//       <AnimatePresence>\n//         {modalNft && (\n//           <motion.div\n//             className=\"modal-blur\"\n//             variants={overlayVariants}\n//             initial=\"hidden\"\n//             animate=\"visible\"\n//             exit=\"exit\"\n//             onClick={() => setModalNft(null)}\n//             style={{ zIndex: 1002 }}\n//           >\n//             <motion.div\n//               className=\"modal-popup\"\n//               variants={modalVariants}\n//               initial=\"hidden\"\n//               animate=\"visible\"\n//               exit=\"exit\"\n//               onClick={e => e.stopPropagation()}\n//             >\n//               <button className=\"modal-close\" onClick={() => setModalNft(null)}>\n//                 √ó\n//               </button>\n//               <motion.div\n//                 className=\"modal-icon\"\n//                 initial={{ scale: 0.6, rotate: -8, opacity: 0 }}\n//                 animate={{ scale: 1, rotate: 0, opacity: 1, transition: { type: \"spring\", duration: 0.45 } }}\n//                 exit={{ scale: 0.8, opacity: 0 }}\n//               >\n//                 {getTypeIcon(modalNft.itemType)}\n//               </motion.div>\n//               <motion.div\n//                 className=\"modal-title\"\n//                 initial={{ opacity: 0, y: 10 }}\n//                 animate={{ opacity: 1, y: 0, transition: { delay: 0.1 } }}\n//                 exit={{ opacity: 0, y: 10 }}\n//               >\n//                 {modalNft.name}\n//               </motion.div>\n//               <motion.div\n//                 className=\"modal-info\"\n//                 initial={{ opacity: 0, y: 10 }}\n//                 animate={{ opacity: 1, y: 0, transition: { delay: 0.16 } }}\n//                 exit={{ opacity: 0, y: 10 }}\n//               >\n//                 <div>\n//                   <b>Type:</b> {modalNft.itemType === \"car\" ? \"Car\" : \"House\"}\n//                 </div>\n//                 <div>\n//                   <b>Worth:</b>{\" \"}\n//                   <span style={{ color: \"#226cf6\", fontWeight: 700 }}>${modalNft.value?.toLocaleString?.() ?? modalNft.value}</span>\n//                 </div>\n//                 <div>\n//                   <b>Purchase Date:</b> {modalNft.purchaseDate}\n//                 </div>\n//                 {modalNft.itemType === \"car\" && (\n//                   <div><b>VIN:</b> {modalNft.vin}</div>\n//                 )}\n//                 {modalNft.itemType === \"house\" && (\n//                   <div><b>Address:</b> {modalNft.addr}</div>\n//                 )}\n//                 <div><b>NFT ID:</b> {modalNft.tokenId}</div>\n//               </motion.div>\n//             </motion.div>\n//           </motion.div>\n//         )}\n//       </AnimatePresence>\n\n//       {/* --- STYLES (your existing CSS) --- */}\n//       <style>{`\n//         .inventory-bg {\n//           min-height: 100vh;\n//           background: linear-gradient(110deg, #f6fafd 0%, #f4f6fb 90%);\n//           padding-bottom: 60px;\n//           font-family: 'Inter', system-ui, sans-serif;\n//         }\n//         .inventory-content {\n//           max-width: 1120px;\n//           margin: 0 auto;\n//           margin-top: 38px;\n//           padding: 0 18px 0 18px;\n//         }\n//         .inventory-title {\n//           font-size: 2.25rem;\n//           font-weight: 900;\n//           color: #20212a;\n//           margin-bottom: 8px;\n//           letter-spacing: 0.01em;\n//         }\n//         .inventory-desc {\n//           margin-bottom: 28px;\n//           color: #555c6e;\n//           font-size: 1.14rem;\n//           font-weight: 400;\n//         }\n//         .section-title {\n//           font-size: 1.28rem;\n//           font-weight: 700;\n//           color: #1d2234;\n//           margin-bottom: 13px;\n//           letter-spacing: 0.01em;\n//         }\n//         .card-grid {\n//           display: grid;\n//           grid-template-columns: repeat(auto-fit, minmax(255px, 1fr));\n//           gap: 30px;\n//           margin-bottom: 36px;\n//         }\n//         .asset-card {\n//           background: #fff;\n//           border-radius: 18px;\n//           box-shadow: 0 3px 16px #e8eafd33, 0 1.5px 8px #c2c6e61b;\n//           padding: 23px 25px 18px 25px;\n//           display: flex;\n//           flex-direction: column;\n//           align-items: flex-start;\n//           min-width: 220px;\n//           transition: box-shadow .14s, border .17s, transform .13s;\n//           border: 2px solid transparent;\n//           position: relative;\n//           overflow: hidden;\n//         }\n//         .asset-card:hover {\n//           border: 2px solid #262cff;\n//           box-shadow: 0 6px 22px #aab8ff44, 0 1.5px 8px #c2c6e629;\n//           transform: translateY(-3px) scale(1.017);\n//         }\n//         .asset-type {\n//           font-size: 2.2rem;\n//           margin-bottom: 8px;\n//         }\n//         .asset-title {\n//           font-size: 1.14rem;\n//           font-weight: 700;\n//           color: #181a23;\n//           margin-bottom: 6px;\n//           letter-spacing: 0.03em;\n//         }\n//         /* Animation effect for asset names */\n//         .name-animate {\n//           position: relative;\n//           display: inline-block;\n//           cursor: pointer;\n//           background: linear-gradient(90deg, #6366f1 40%, #0091ff 80%, #181a23 120%);\n//           background-size: 200% 100%;\n//           background-clip: text;\n//           -webkit-background-clip: text;\n//           color: transparent;\n//           -webkit-text-fill-color: transparent;\n//           transition: background-position 0.38s cubic-bezier(0.4,0.2,0.2,1);\n//         }\n//         .asset-card:hover .name-animate {\n//           background-position: -100% 0;\n//           color: #262cff;\n//           -webkit-text-fill-color: #262cff;\n//         }\n//         .asset-detail {\n//           color: #596081;\n//           font-size: 1.03rem;\n//           margin-bottom: 2.5px;\n//         }\n//         .asset-money {\n//           color: #262cff;\n//           font-weight: 700;\n//           letter-spacing: 0.01em;\n//         }\n//         .asset-id {\n//           font-size: 0.97rem;\n//           color: #b0b2c3;\n//           margin-top: 6px;\n//           letter-spacing: 0.02em;\n//         }\n//         .inventory-empty {\n//           color: #bbbfd0;\n//           font-size: 1.04rem;\n//           font-weight: 500;\n//           padding: 15px 0 0 7px;\n//         }\n//         /* MODAL POPUP STYLES */\n//         .modal-blur {\n//           position: fixed;\n//           top: 0; left: 0; width: 100vw; height: 100vh;\n//           z-index: 1002;\n//           background: rgba(38,44,80,0.15);\n//           backdrop-filter: blur(3.5px);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n//         .modal-popup {\n//           background: #fff;\n//           border-radius: 19px;\n//           box-shadow: 0 18px 50px #262cff1c, 0 2px 18px #262cff15;\n//           padding: 42px 35px 28px 35px;\n//           min-width: 340px;\n//           max-width: 94vw;\n//           min-height: 230px;\n//           display: flex;\n//           flex-direction: column;\n//           align-items: center;\n//           position: relative;\n//         }\n//         .modal-close {\n//           position: absolute;\n//           right: 18px;\n//           top: 18px;\n//           background: none;\n//           border: none;\n//           font-size: 1.6rem;\n//           color: #c5c8d6;\n//           font-weight: 700;\n//           cursor: pointer;\n//           transition: color .18s;\n//         }\n//         .modal-close:hover { color: #262cff; }\n//         .modal-icon {\n//           font-size: 2.5rem;\n//           margin-bottom: 15px;\n//           text-shadow: 0 2px 10px #6366f122;\n//         }\n//         .modal-title {\n//           font-size: 1.38rem;\n//           font-weight: 800;\n//           color: #262cff;\n//           margin-bottom: 14px;\n//           text-align: center;\n//           letter-spacing: 0.03em;\n//         }\n//         .modal-info {\n//           color: #313651;\n//           font-size: 1.12rem;\n//           display: flex;\n//           flex-direction: column;\n//           gap: 6px;\n//           width: 100%;\n//         }\n//         @media (max-width: 600px) {\n//           .modal-popup { padding: 24px 8vw 22px 8vw; }\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { getProvider, getMyNFTs, getEthBalance } from \"../contractUtils\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Inventory({\n  user,\n  search,\n  setSearch\n}) {\n  _s();\n  var _modalNft$value$toLoc, _modalNft$value, _modalNft$value$toLoc2;\n  const [address, setAddress] = useState(null);\n  const [cars, setCars] = useState([]);\n  const [houses, setHouses] = useState([]);\n  const [balance, setBalance] = useState(\"0\");\n  const [modalNft, setModalNft] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      const provider = await getProvider();\n      const signer = provider.getSigner();\n      const userAddress = await signer.getAddress();\n      setAddress(userAddress);\n      const nfts = await getMyNFTs(userAddress);\n      setCars(nfts.filter(nft => nft.itemType === \"car\"));\n      setHouses(nfts.filter(nft => nft.itemType === \"house\"));\n      if (userAddress && typeof userAddress === \"string\" && userAddress.startsWith(\"0x\") && userAddress.length === 42) {\n        setBalance(await getEthBalance(userAddress));\n      }\n    }\n    fetchData();\n  }, [user]);\n  const s = (search || \"\").trim().toLowerCase();\n  const filteredHouses = !s ? houses : houses.filter(nft => nft.name.toLowerCase().includes(s) || nft.addr && nft.addr.toLowerCase().includes(s));\n  const filteredCars = !s ? cars : cars.filter(nft => nft.name.toLowerCase().includes(s) || nft.vin && nft.vin.toLowerCase().includes(s));\n\n  // Helper for car/house icon\n  const getTypeIcon = type => type === \"car\" ? \"üöó\" : \"üè†\";\n\n  // Framer Motion variants for animation\n  const overlayVariants = {\n    hidden: {\n      opacity: 0\n    },\n    visible: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    }\n  };\n  const modalVariants = {\n    hidden: {\n      y: 60,\n      opacity: 0,\n      scale: 0.95\n    },\n    visible: {\n      y: 0,\n      opacity: 1,\n      scale: 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 360,\n        damping: 26\n      }\n    },\n    exit: {\n      y: 60,\n      opacity: 0,\n      scale: 0.95\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inventory-bg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inventory-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"inventory-title\",\n        children: \"Your Properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inventory-desc\",\n        children: \"View your owned houses and cars below. Use the Transfer tab to send an item.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-title\",\n          children: \"Houses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-grid\",\n          children: [filteredHouses.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inventory-empty\",\n            children: \"No houses found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 45\n          }, this), filteredHouses.map(nft => {\n            var _nft$value$toLocaleSt, _nft$value, _nft$value$toLocaleSt2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"asset-card\",\n              onClick: () => setModalNft(nft),\n              style: {\n                cursor: \"pointer\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"asset-type\",\n                children: \"\\uD83C\\uDFE0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"asset-title name-animate\",\n                children: nft.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"asset-detail\",\n                children: [\"Worth: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"asset-money\",\n                  children: [\"$\", (_nft$value$toLocaleSt = (_nft$value = nft.value) === null || _nft$value === void 0 ? void 0 : (_nft$value$toLocaleSt2 = _nft$value.toLocaleString) === null || _nft$value$toLocaleSt2 === void 0 ? void 0 : _nft$value$toLocaleSt2.call(_nft$value)) !== null && _nft$value$toLocaleSt !== void 0 ? _nft$value$toLocaleSt : nft.value]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"asset-detail\",\n                children: [\"Purchased: \", nft.purchaseDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"asset-detail\",\n                children: [\"Address: \", nft.addr]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"asset-id\",\n                children: [\"NFT ID: \", nft.tokenId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this)]\n            }, nft.tokenId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        style: {\n          marginTop: 32\n        },\n        children: \"Cars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-grid\",\n        children: [filteredCars.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inventory-empty\",\n          children: \"No cars found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 41\n        }, this), filteredCars.map(nft => {\n          var _nft$value$toLocaleSt3, _nft$value2, _nft$value2$toLocaleS;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"asset-card\",\n            onClick: () => setModalNft(nft),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"asset-type\",\n              children: \"\\uD83D\\uDE97\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"asset-title name-animate\",\n              children: nft.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"asset-detail\",\n              children: [\"Worth: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"asset-money\",\n                children: [\"$\", (_nft$value$toLocaleSt3 = (_nft$value2 = nft.value) === null || _nft$value2 === void 0 ? void 0 : (_nft$value2$toLocaleS = _nft$value2.toLocaleString) === null || _nft$value2$toLocaleS === void 0 ? void 0 : _nft$value2$toLocaleS.call(_nft$value2)) !== null && _nft$value$toLocaleSt3 !== void 0 ? _nft$value$toLocaleSt3 : nft.value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"asset-detail\",\n              children: [\"Purchased: \", nft.purchaseDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"asset-detail\",\n              children: [\"VIN: \", nft.vin]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"asset-id\",\n              children: [\"NFT ID: \", nft.tokenId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this)]\n          }, nft.tokenId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: modalNft && /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"modal-blur\",\n        variants: overlayVariants,\n        initial: \"hidden\",\n        animate: \"visible\",\n        exit: \"exit\",\n        onClick: () => setModalNft(null),\n        style: {\n          zIndex: 1002\n        },\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"modal-popup\",\n          variants: modalVariants,\n          initial: \"hidden\",\n          animate: \"visible\",\n          exit: \"exit\",\n          onClick: e => e.stopPropagation(),\n          layout: true,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setModalNft(null),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"modal-icon\",\n            initial: {\n              scale: 0.7,\n              rotate: -7,\n              opacity: 0\n            },\n            animate: {\n              scale: 1,\n              rotate: 0,\n              opacity: 1,\n              transition: {\n                type: \"spring\",\n                duration: 0.45\n              }\n            },\n            exit: {\n              scale: 0.8,\n              opacity: 0\n            },\n            children: getTypeIcon(modalNft.itemType)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"modal-title\",\n            initial: {\n              opacity: 0,\n              y: 10\n            },\n            animate: {\n              opacity: 1,\n              y: 0,\n              transition: {\n                delay: 0.1\n              }\n            },\n            exit: {\n              opacity: 0,\n              y: 10\n            },\n            children: modalNft.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"modal-info\",\n            initial: {\n              opacity: 0,\n              y: 10\n            },\n            animate: {\n              opacity: 1,\n              y: 0,\n              transition: {\n                delay: 0.16\n              }\n            },\n            exit: {\n              opacity: 0,\n              y: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 19\n              }, this), \" \", modalNft.itemType === \"car\" ? \"Car\" : \"House\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Worth:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"#226cf6\",\n                  fontWeight: 700\n                },\n                children: [\"$\", (_modalNft$value$toLoc = (_modalNft$value = modalNft.value) === null || _modalNft$value === void 0 ? void 0 : (_modalNft$value$toLoc2 = _modalNft$value.toLocaleString) === null || _modalNft$value$toLoc2 === void 0 ? void 0 : _modalNft$value$toLoc2.call(_modalNft$value)) !== null && _modalNft$value$toLoc !== void 0 ? _modalNft$value$toLoc : modalNft.value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Purchase Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 19\n              }, this), \" \", modalNft.purchaseDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 17\n            }, this), modalNft.itemType === \"car\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"VIN:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 24\n              }, this), \" \", modalNft.vin]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 19\n            }, this), modalNft.itemType === \"house\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 24\n              }, this), \" \", modalNft.addr]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"NFT ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 22\n              }, this), \" \", modalNft.tokenId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `/* ...unchanged, your current styles... */`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 425,\n    columnNumber: 5\n  }, this);\n}\n_s(Inventory, \"IuFbA1VPCxRaSvJkWbGG2977oTM=\");\n_c = Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useEffect","useState","getProvider","getMyNFTs","getEthBalance","motion","AnimatePresence","jsxDEV","_jsxDEV","Inventory","user","search","setSearch","_s","_modalNft$value$toLoc","_modalNft$value","_modalNft$value$toLoc2","address","setAddress","cars","setCars","houses","setHouses","balance","setBalance","modalNft","setModalNft","fetchData","provider","signer","getSigner","userAddress","getAddress","nfts","filter","nft","itemType","startsWith","length","s","trim","toLowerCase","filteredHouses","name","includes","addr","filteredCars","vin","getTypeIcon","type","overlayVariants","hidden","opacity","visible","exit","modalVariants","y","scale","transition","stiffness","damping","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_nft$value$toLocaleSt","_nft$value","_nft$value$toLocaleSt2","onClick","style","cursor","value","toLocaleString","call","purchaseDate","tokenId","marginTop","_nft$value$toLocaleSt3","_nft$value2","_nft$value2$toLocaleS","div","variants","initial","animate","zIndex","e","stopPropagation","layout","rotate","duration","delay","color","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/Rares Manolescu/Desktop/blockchain-property-app/frontend/src/components/Inventory.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { getProvider, getMyNFTs, getEthBalance } from \"../contractUtils\";\r\n// import { motion, AnimatePresence } from \"framer-motion\";\r\n\r\n// export default function Inventory({ user, search, setSearch }) {\r\n//   const [address, setAddress] = useState(null);\r\n//   const [cars, setCars] = useState([]);\r\n//   const [houses, setHouses] = useState([]);\r\n//   const [balance, setBalance] = useState(\"0\");\r\n//   const [modalNft, setModalNft] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       const provider = await getProvider();\r\n//       const signer = provider.getSigner();\r\n//       const userAddress = await signer.getAddress();\r\n//       setAddress(userAddress);\r\n//       const nfts = await getMyNFTs(userAddress);\r\n//       setCars(nfts.filter(nft => nft.itemType === \"car\"));\r\n//       setHouses(nfts.filter(nft => nft.itemType === \"house\"));\r\n//       if (\r\n//         userAddress &&\r\n//         typeof userAddress === \"string\" &&\r\n//         userAddress.startsWith(\"0x\") &&\r\n//         userAddress.length === 42\r\n//       ) {\r\n//         setBalance(await getEthBalance(userAddress));\r\n//       }\r\n//     }\r\n//     fetchData();\r\n//   }, [user]);\r\n\r\n//   const s = (search || \"\").trim().toLowerCase();\r\n//   const filteredHouses = !s\r\n//     ? houses\r\n//     : houses.filter(\r\n//         nft =>\r\n//           nft.name.toLowerCase().includes(s) ||\r\n//           (nft.addr && nft.addr.toLowerCase().includes(s))\r\n//       );\r\n//   const filteredCars = !s\r\n//     ? cars\r\n//     : cars.filter(\r\n//         nft =>\r\n//           nft.name.toLowerCase().includes(s) ||\r\n//           (nft.vin && nft.vin.toLowerCase().includes(s))\r\n//       );\r\n\r\n//   const getTypeIcon = (type) => type === \"car\" ? \"üöó\" : \"üè†\";\r\n\r\n//   // Framer Motion variants\r\n//   const overlayVariants = {\r\n//     hidden: { opacity: 0 },\r\n//     visible: { opacity: 1 },\r\n//     exit: { opacity: 0 }\r\n//   };\r\n//   const modalVariants = {\r\n//     hidden: { y: 40, opacity: 0, scale: 0.93 },\r\n//     visible: { y: 0, opacity: 1, scale: 1, transition: { type: \"spring\", stiffness: 410, damping: 30 } },\r\n//     exit: { y: 40, opacity: 0, scale: 0.93 }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"inventory-bg\">\r\n//       <div className=\"inventory-content\">\r\n//         <h1 className=\"inventory-title\">Your Properties</h1>\r\n//         <div className=\"inventory-desc\">\r\n//           View your owned houses and cars below. Use the Transfer tab to send an item.\r\n//         </div>\r\n//         <div>\r\n//           <div className=\"section-title\">Houses</div>\r\n//           <div className=\"card-grid\">\r\n//             {filteredHouses.length === 0 && <span className=\"inventory-empty\">No houses found.</span>}\r\n//             {filteredHouses.map((nft) => (\r\n//               <div\r\n//                 key={nft.tokenId}\r\n//                 className=\"asset-card\"\r\n//                 onClick={() => setModalNft(nft)}\r\n//                 style={{ cursor: \"pointer\" }}\r\n//               >\r\n//                 <div className=\"asset-type\">üè†</div>\r\n//                 <div className=\"asset-title name-animate\">{nft.name}</div>\r\n//                 <div className=\"asset-detail\">\r\n//                   Worth: <span className=\"asset-money\">${nft.value?.toLocaleString?.() ?? nft.value}</span>\r\n//                 </div>\r\n//                 <div className=\"asset-detail\">Purchased: {nft.purchaseDate}</div>\r\n//                 <div className=\"asset-detail\">Address: {nft.addr}</div>\r\n//                 <div className=\"asset-id\">NFT ID: {nft.tokenId}</div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"section-title\" style={{ marginTop: 32 }}>Cars</div>\r\n//         <div className=\"card-grid\">\r\n//           {filteredCars.length === 0 && <span className=\"inventory-empty\">No cars found.</span>}\r\n//           {filteredCars.map((nft) => (\r\n//             <div\r\n//               key={nft.tokenId}\r\n//               className=\"asset-card\"\r\n//               onClick={() => setModalNft(nft)}\r\n//               style={{ cursor: \"pointer\" }}\r\n//             >\r\n//               <div className=\"asset-type\">üöó</div>\r\n//               <div className=\"asset-title name-animate\">{nft.name}</div>\r\n//               <div className=\"asset-detail\">\r\n//                 Worth: <span className=\"asset-money\">${nft.value?.toLocaleString?.() ?? nft.value}</span>\r\n//               </div>\r\n//               <div className=\"asset-detail\">Purchased: {nft.purchaseDate}</div>\r\n//               <div className=\"asset-detail\">VIN: {nft.vin}</div>\r\n//               <div className=\"asset-id\">NFT ID: {nft.tokenId}</div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* --- MODAL POPUP with framer-motion --- */}\r\n//       <AnimatePresence>\r\n//         {modalNft && (\r\n//           <motion.div\r\n//             className=\"modal-blur\"\r\n//             variants={overlayVariants}\r\n//             initial=\"hidden\"\r\n//             animate=\"visible\"\r\n//             exit=\"exit\"\r\n//             onClick={() => setModalNft(null)}\r\n//             style={{ zIndex: 1002 }}\r\n//           >\r\n//             <motion.div\r\n//               className=\"modal-popup\"\r\n//               variants={modalVariants}\r\n//               initial=\"hidden\"\r\n//               animate=\"visible\"\r\n//               exit=\"exit\"\r\n//               onClick={e => e.stopPropagation()}\r\n//             >\r\n//               <button className=\"modal-close\" onClick={() => setModalNft(null)}>\r\n//                 √ó\r\n//               </button>\r\n//               <motion.div\r\n//                 className=\"modal-icon\"\r\n//                 initial={{ scale: 0.6, rotate: -8, opacity: 0 }}\r\n//                 animate={{ scale: 1, rotate: 0, opacity: 1, transition: { type: \"spring\", duration: 0.45 } }}\r\n//                 exit={{ scale: 0.8, opacity: 0 }}\r\n//               >\r\n//                 {getTypeIcon(modalNft.itemType)}\r\n//               </motion.div>\r\n//               <motion.div\r\n//                 className=\"modal-title\"\r\n//                 initial={{ opacity: 0, y: 10 }}\r\n//                 animate={{ opacity: 1, y: 0, transition: { delay: 0.1 } }}\r\n//                 exit={{ opacity: 0, y: 10 }}\r\n//               >\r\n//                 {modalNft.name}\r\n//               </motion.div>\r\n//               <motion.div\r\n//                 className=\"modal-info\"\r\n//                 initial={{ opacity: 0, y: 10 }}\r\n//                 animate={{ opacity: 1, y: 0, transition: { delay: 0.16 } }}\r\n//                 exit={{ opacity: 0, y: 10 }}\r\n//               >\r\n//                 <div>\r\n//                   <b>Type:</b> {modalNft.itemType === \"car\" ? \"Car\" : \"House\"}\r\n//                 </div>\r\n//                 <div>\r\n//                   <b>Worth:</b>{\" \"}\r\n//                   <span style={{ color: \"#226cf6\", fontWeight: 700 }}>${modalNft.value?.toLocaleString?.() ?? modalNft.value}</span>\r\n//                 </div>\r\n//                 <div>\r\n//                   <b>Purchase Date:</b> {modalNft.purchaseDate}\r\n//                 </div>\r\n//                 {modalNft.itemType === \"car\" && (\r\n//                   <div><b>VIN:</b> {modalNft.vin}</div>\r\n//                 )}\r\n//                 {modalNft.itemType === \"house\" && (\r\n//                   <div><b>Address:</b> {modalNft.addr}</div>\r\n//                 )}\r\n//                 <div><b>NFT ID:</b> {modalNft.tokenId}</div>\r\n//               </motion.div>\r\n//             </motion.div>\r\n//           </motion.div>\r\n//         )}\r\n//       </AnimatePresence>\r\n\r\n//       {/* --- STYLES (your existing CSS) --- */}\r\n//       <style>{`\r\n//         .inventory-bg {\r\n//           min-height: 100vh;\r\n//           background: linear-gradient(110deg, #f6fafd 0%, #f4f6fb 90%);\r\n//           padding-bottom: 60px;\r\n//           font-family: 'Inter', system-ui, sans-serif;\r\n//         }\r\n//         .inventory-content {\r\n//           max-width: 1120px;\r\n//           margin: 0 auto;\r\n//           margin-top: 38px;\r\n//           padding: 0 18px 0 18px;\r\n//         }\r\n//         .inventory-title {\r\n//           font-size: 2.25rem;\r\n//           font-weight: 900;\r\n//           color: #20212a;\r\n//           margin-bottom: 8px;\r\n//           letter-spacing: 0.01em;\r\n//         }\r\n//         .inventory-desc {\r\n//           margin-bottom: 28px;\r\n//           color: #555c6e;\r\n//           font-size: 1.14rem;\r\n//           font-weight: 400;\r\n//         }\r\n//         .section-title {\r\n//           font-size: 1.28rem;\r\n//           font-weight: 700;\r\n//           color: #1d2234;\r\n//           margin-bottom: 13px;\r\n//           letter-spacing: 0.01em;\r\n//         }\r\n//         .card-grid {\r\n//           display: grid;\r\n//           grid-template-columns: repeat(auto-fit, minmax(255px, 1fr));\r\n//           gap: 30px;\r\n//           margin-bottom: 36px;\r\n//         }\r\n//         .asset-card {\r\n//           background: #fff;\r\n//           border-radius: 18px;\r\n//           box-shadow: 0 3px 16px #e8eafd33, 0 1.5px 8px #c2c6e61b;\r\n//           padding: 23px 25px 18px 25px;\r\n//           display: flex;\r\n//           flex-direction: column;\r\n//           align-items: flex-start;\r\n//           min-width: 220px;\r\n//           transition: box-shadow .14s, border .17s, transform .13s;\r\n//           border: 2px solid transparent;\r\n//           position: relative;\r\n//           overflow: hidden;\r\n//         }\r\n//         .asset-card:hover {\r\n//           border: 2px solid #262cff;\r\n//           box-shadow: 0 6px 22px #aab8ff44, 0 1.5px 8px #c2c6e629;\r\n//           transform: translateY(-3px) scale(1.017);\r\n//         }\r\n//         .asset-type {\r\n//           font-size: 2.2rem;\r\n//           margin-bottom: 8px;\r\n//         }\r\n//         .asset-title {\r\n//           font-size: 1.14rem;\r\n//           font-weight: 700;\r\n//           color: #181a23;\r\n//           margin-bottom: 6px;\r\n//           letter-spacing: 0.03em;\r\n//         }\r\n//         /* Animation effect for asset names */\r\n//         .name-animate {\r\n//           position: relative;\r\n//           display: inline-block;\r\n//           cursor: pointer;\r\n//           background: linear-gradient(90deg, #6366f1 40%, #0091ff 80%, #181a23 120%);\r\n//           background-size: 200% 100%;\r\n//           background-clip: text;\r\n//           -webkit-background-clip: text;\r\n//           color: transparent;\r\n//           -webkit-text-fill-color: transparent;\r\n//           transition: background-position 0.38s cubic-bezier(0.4,0.2,0.2,1);\r\n//         }\r\n//         .asset-card:hover .name-animate {\r\n//           background-position: -100% 0;\r\n//           color: #262cff;\r\n//           -webkit-text-fill-color: #262cff;\r\n//         }\r\n//         .asset-detail {\r\n//           color: #596081;\r\n//           font-size: 1.03rem;\r\n//           margin-bottom: 2.5px;\r\n//         }\r\n//         .asset-money {\r\n//           color: #262cff;\r\n//           font-weight: 700;\r\n//           letter-spacing: 0.01em;\r\n//         }\r\n//         .asset-id {\r\n//           font-size: 0.97rem;\r\n//           color: #b0b2c3;\r\n//           margin-top: 6px;\r\n//           letter-spacing: 0.02em;\r\n//         }\r\n//         .inventory-empty {\r\n//           color: #bbbfd0;\r\n//           font-size: 1.04rem;\r\n//           font-weight: 500;\r\n//           padding: 15px 0 0 7px;\r\n//         }\r\n//         /* MODAL POPUP STYLES */\r\n//         .modal-blur {\r\n//           position: fixed;\r\n//           top: 0; left: 0; width: 100vw; height: 100vh;\r\n//           z-index: 1002;\r\n//           background: rgba(38,44,80,0.15);\r\n//           backdrop-filter: blur(3.5px);\r\n//           display: flex;\r\n//           align-items: center;\r\n//           justify-content: center;\r\n//         }\r\n//         .modal-popup {\r\n//           background: #fff;\r\n//           border-radius: 19px;\r\n//           box-shadow: 0 18px 50px #262cff1c, 0 2px 18px #262cff15;\r\n//           padding: 42px 35px 28px 35px;\r\n//           min-width: 340px;\r\n//           max-width: 94vw;\r\n//           min-height: 230px;\r\n//           display: flex;\r\n//           flex-direction: column;\r\n//           align-items: center;\r\n//           position: relative;\r\n//         }\r\n//         .modal-close {\r\n//           position: absolute;\r\n//           right: 18px;\r\n//           top: 18px;\r\n//           background: none;\r\n//           border: none;\r\n//           font-size: 1.6rem;\r\n//           color: #c5c8d6;\r\n//           font-weight: 700;\r\n//           cursor: pointer;\r\n//           transition: color .18s;\r\n//         }\r\n//         .modal-close:hover { color: #262cff; }\r\n//         .modal-icon {\r\n//           font-size: 2.5rem;\r\n//           margin-bottom: 15px;\r\n//           text-shadow: 0 2px 10px #6366f122;\r\n//         }\r\n//         .modal-title {\r\n//           font-size: 1.38rem;\r\n//           font-weight: 800;\r\n//           color: #262cff;\r\n//           margin-bottom: 14px;\r\n//           text-align: center;\r\n//           letter-spacing: 0.03em;\r\n//         }\r\n//         .modal-info {\r\n//           color: #313651;\r\n//           font-size: 1.12rem;\r\n//           display: flex;\r\n//           flex-direction: column;\r\n//           gap: 6px;\r\n//           width: 100%;\r\n//         }\r\n//         @media (max-width: 600px) {\r\n//           .modal-popup { padding: 24px 8vw 22px 8vw; }\r\n//         }\r\n//       `}</style>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getProvider, getMyNFTs, getEthBalance } from \"../contractUtils\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nexport default function Inventory({ user, search, setSearch }) {\r\n  const [address, setAddress] = useState(null);\r\n  const [cars, setCars] = useState([]);\r\n  const [houses, setHouses] = useState([]);\r\n  const [balance, setBalance] = useState(\"0\");\r\n  const [modalNft, setModalNft] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const provider = await getProvider();\r\n      const signer = provider.getSigner();\r\n      const userAddress = await signer.getAddress();\r\n      setAddress(userAddress);\r\n      const nfts = await getMyNFTs(userAddress);\r\n      setCars(nfts.filter(nft => nft.itemType === \"car\"));\r\n      setHouses(nfts.filter(nft => nft.itemType === \"house\"));\r\n      if (\r\n        userAddress &&\r\n        typeof userAddress === \"string\" &&\r\n        userAddress.startsWith(\"0x\") &&\r\n        userAddress.length === 42\r\n      ) {\r\n        setBalance(await getEthBalance(userAddress));\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [user]);\r\n\r\n  const s = (search || \"\").trim().toLowerCase();\r\n  const filteredHouses = !s\r\n    ? houses\r\n    : houses.filter(\r\n        nft =>\r\n          nft.name.toLowerCase().includes(s) ||\r\n          (nft.addr && nft.addr.toLowerCase().includes(s))\r\n      );\r\n  const filteredCars = !s\r\n    ? cars\r\n    : cars.filter(\r\n        nft =>\r\n          nft.name.toLowerCase().includes(s) ||\r\n          (nft.vin && nft.vin.toLowerCase().includes(s))\r\n      );\r\n\r\n  // Helper for car/house icon\r\n  const getTypeIcon = (type) => type === \"car\" ? \"üöó\" : \"üè†\";\r\n\r\n  // Framer Motion variants for animation\r\n  const overlayVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1 },\r\n    exit: { opacity: 0 }\r\n  };\r\n  const modalVariants = {\r\n    hidden: { y: 60, opacity: 0, scale: 0.95 },\r\n    visible: { y: 0, opacity: 1, scale: 1, transition: { type: \"spring\", stiffness: 360, damping: 26 } },\r\n    exit: { y: 60, opacity: 0, scale: 0.95 }\r\n  };\r\n\r\n  return (\r\n    <div className=\"inventory-bg\">\r\n      <div className=\"inventory-content\">\r\n        <h1 className=\"inventory-title\">Your Properties</h1>\r\n        <div className=\"inventory-desc\">\r\n          View your owned houses and cars below. Use the Transfer tab to send an item.\r\n        </div>\r\n        <div>\r\n          <div className=\"section-title\">Houses</div>\r\n          <div className=\"card-grid\">\r\n            {filteredHouses.length === 0 && <span className=\"inventory-empty\">No houses found.</span>}\r\n            {filteredHouses.map((nft) => (\r\n              <div\r\n                key={nft.tokenId}\r\n                className=\"asset-card\"\r\n                onClick={() => setModalNft(nft)}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <div className=\"asset-type\">üè†</div>\r\n                <div className=\"asset-title name-animate\">{nft.name}</div>\r\n                <div className=\"asset-detail\">\r\n                  Worth: <span className=\"asset-money\">${nft.value?.toLocaleString?.() ?? nft.value}</span>\r\n                </div>\r\n                <div className=\"asset-detail\">Purchased: {nft.purchaseDate}</div>\r\n                <div className=\"asset-detail\">Address: {nft.addr}</div>\r\n                <div className=\"asset-id\">NFT ID: {nft.tokenId}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"section-title\" style={{ marginTop: 32 }}>Cars</div>\r\n        <div className=\"card-grid\">\r\n          {filteredCars.length === 0 && <span className=\"inventory-empty\">No cars found.</span>}\r\n          {filteredCars.map((nft) => (\r\n            <div\r\n              key={nft.tokenId}\r\n              className=\"asset-card\"\r\n              onClick={() => setModalNft(nft)}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <div className=\"asset-type\">üöó</div>\r\n              <div className=\"asset-title name-animate\">{nft.name}</div>\r\n              <div className=\"asset-detail\">\r\n                Worth: <span className=\"asset-money\">${nft.value?.toLocaleString?.() ?? nft.value}</span>\r\n              </div>\r\n              <div className=\"asset-detail\">Purchased: {nft.purchaseDate}</div>\r\n              <div className=\"asset-detail\">VIN: {nft.vin}</div>\r\n              <div className=\"asset-id\">NFT ID: {nft.tokenId}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* --- MODAL POPUP with framer-motion --- */}\r\n      <AnimatePresence>\r\n        {modalNft && (\r\n          <motion.div\r\n            className=\"modal-blur\"\r\n            variants={overlayVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n            onClick={() => setModalNft(null)}\r\n            style={{ zIndex: 1002 }}\r\n          >\r\n            <motion.div\r\n              className=\"modal-popup\"\r\n              variants={modalVariants}\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n              exit=\"exit\"\r\n              onClick={e => e.stopPropagation()}\r\n              layout\r\n            >\r\n              <button className=\"modal-close\" onClick={() => setModalNft(null)}>\r\n                √ó\r\n              </button>\r\n              <motion.div\r\n                className=\"modal-icon\"\r\n                initial={{ scale: 0.7, rotate: -7, opacity: 0 }}\r\n                animate={{ scale: 1, rotate: 0, opacity: 1, transition: { type: \"spring\", duration: 0.45 } }}\r\n                exit={{ scale: 0.8, opacity: 0 }}\r\n              >\r\n                {getTypeIcon(modalNft.itemType)}\r\n              </motion.div>\r\n              <motion.div\r\n                className=\"modal-title\"\r\n                initial={{ opacity: 0, y: 10 }}\r\n                animate={{ opacity: 1, y: 0, transition: { delay: 0.1 } }}\r\n                exit={{ opacity: 0, y: 10 }}\r\n              >\r\n                {modalNft.name}\r\n              </motion.div>\r\n              <motion.div\r\n                className=\"modal-info\"\r\n                initial={{ opacity: 0, y: 10 }}\r\n                animate={{ opacity: 1, y: 0, transition: { delay: 0.16 } }}\r\n                exit={{ opacity: 0, y: 10 }}\r\n              >\r\n                <div>\r\n                  <b>Type:</b> {modalNft.itemType === \"car\" ? \"Car\" : \"House\"}\r\n                </div>\r\n                <div>\r\n                  <b>Worth:</b>{\" \"}\r\n                  <span style={{ color: \"#226cf6\", fontWeight: 700 }}>${modalNft.value?.toLocaleString?.() ?? modalNft.value}</span>\r\n                </div>\r\n                <div>\r\n                  <b>Purchase Date:</b> {modalNft.purchaseDate}\r\n                </div>\r\n                {modalNft.itemType === \"car\" && (\r\n                  <div><b>VIN:</b> {modalNft.vin}</div>\r\n                )}\r\n                {modalNft.itemType === \"house\" && (\r\n                  <div><b>Address:</b> {modalNft.addr}</div>\r\n                )}\r\n                <div><b>NFT ID:</b> {modalNft.tokenId}</div>\r\n              </motion.div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* --- STYLES (keep your existing CSS as is!) --- */}\r\n      <style>{`/* ...unchanged, your current styles... */`}</style>\r\n    </div>\r\n  );\r\n}\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}