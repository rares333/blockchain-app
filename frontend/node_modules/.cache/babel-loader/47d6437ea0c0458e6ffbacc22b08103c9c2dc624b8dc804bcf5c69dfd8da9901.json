{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rares Manolescu\\\\Desktop\\\\blockchain-property-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, useNavigate, Navigate, useLocation } from \"react-router-dom\";\n// import Login from \"./components/Login\";\n// import Inventory from \"./components/Inventory\";\n// import Transfer from \"./components/Transfer\";\n// import About from \"./components/About\";\n// import Navbar from \"./components/Navbar\";\n\n// function MainAppWrapper() {\n//   const [showAccountModal, setShowAccountModal] = useState(false);\n//   const [walletAddress, setWalletAddress] = useState(\"\"); // Set by Inventory/Transfer\n//   const navigate = useNavigate();\n\n//   const handleSearch = (query) => {\n//     navigate(`/inventory?search=${encodeURIComponent(query)}`);\n//   };\n\n//   const handleLogout = () => {\n//     navigate(\"/\");\n//     // Add your state reset logic here if needed\n//   };\n\n//   return (\n//     <>\n//       <Navbar\n//         onSearch={handleSearch}\n//         walletAddress={walletAddress}\n//         onLogout={handleLogout}\n//         showAccountModal={showAccountModal}\n//         setShowAccountModal={setShowAccountModal}\n//       />\n//       <Routes>\n//         <Route path=\"/inventory\" element={<Inventory setWalletAddress={setWalletAddress} />} />\n//         <Route path=\"/transfer\" element={<Transfer setWalletAddress={setWalletAddress} />} />\n//         <Route path=\"/about\" element={<About />} />\n//         <Route path=\"*\" element={<Navigate to=\"/inventory\" />} />\n//       </Routes>\n//     </>\n//   );\n// }\n\n// export default function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={<Login />} />\n//         <Route path=\"/*\" element={<MainAppWrapper />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import Login from \"./components/Login\";\n// import Inventory from \"./components/Inventory\";\n// import Transfer from \"./components/Transfer\";\n// import About from \"./components/About\"; // if you have an About page/component\n// import Navbar from \"./components/Navbar\"; // if you use a modern navbar (optional)\n\n// // Optional: Global state for user\n// function App() {\n//   const [user, setUser] = useState(null);\n\n//   return (\n//     <Router>\n//       {user && <Navbar user={user} setUser={setUser} />} {/* Hide navbar if not logged in */}\n//       <Routes>\n//         <Route path=\"/\" element={<Login onLogin={setUser} />} />\n//         <Route\n//           path=\"/inventory\"\n//           element={user ? <Inventory user={user} /> : <Navigate to=\"/\" />}\n//         />\n//         <Route\n//           path=\"/transfer\"\n//           element={user ? <Transfer user={user} /> : <Navigate to=\"/\" />}\n//         />\n//         <Route path=\"/about\" element={<About />} />\n//         {/* Fallback to login */}\n//         <Route path=\"*\" element={<Navigate to=\"/\" />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n// export default App;\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Inventory from \"./components/Inventory\";\nimport Transfer from \"./components/Transfer\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [user, setUser] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [user && /*#__PURE__*/_jsxDEV(Navbar, {\n      user: user,\n      setUser: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: user ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: setUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/inventory\",\n        element: user ? /*#__PURE__*/_jsxDEV(Inventory, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 50\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 78\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/transfer\",\n        element: user ? /*#__PURE__*/_jsxDEV(Transfer, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 49\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 76\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","Login","Inventory","Transfer","About","Navbar","jsxDEV","_jsxDEV","App","_s","user","setUser","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/Rares Manolescu/Desktop/blockchain-property-app/frontend/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { BrowserRouter as Router, Routes, Route, useNavigate, Navigate, useLocation } from \"react-router-dom\";\r\n// import Login from \"./components/Login\";\r\n// import Inventory from \"./components/Inventory\";\r\n// import Transfer from \"./components/Transfer\";\r\n// import About from \"./components/About\";\r\n// import Navbar from \"./components/Navbar\";\r\n\r\n// function MainAppWrapper() {\r\n//   const [showAccountModal, setShowAccountModal] = useState(false);\r\n//   const [walletAddress, setWalletAddress] = useState(\"\"); // Set by Inventory/Transfer\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSearch = (query) => {\r\n//     navigate(`/inventory?search=${encodeURIComponent(query)}`);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     navigate(\"/\");\r\n//     // Add your state reset logic here if needed\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Navbar\r\n//         onSearch={handleSearch}\r\n//         walletAddress={walletAddress}\r\n//         onLogout={handleLogout}\r\n//         showAccountModal={showAccountModal}\r\n//         setShowAccountModal={setShowAccountModal}\r\n//       />\r\n//       <Routes>\r\n//         <Route path=\"/inventory\" element={<Inventory setWalletAddress={setWalletAddress} />} />\r\n//         <Route path=\"/transfer\" element={<Transfer setWalletAddress={setWalletAddress} />} />\r\n//         <Route path=\"/about\" element={<About />} />\r\n//         <Route path=\"*\" element={<Navigate to=\"/inventory\" />} />\r\n//       </Routes>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default function App() {\r\n//   return (\r\n//     <Router>\r\n//       <Routes>\r\n//         <Route path=\"/\" element={<Login />} />\r\n//         <Route path=\"/*\" element={<MainAppWrapper />} />\r\n//       </Routes>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\n// import Login from \"./components/Login\";\r\n// import Inventory from \"./components/Inventory\";\r\n// import Transfer from \"./components/Transfer\";\r\n// import About from \"./components/About\"; // if you have an About page/component\r\n// import Navbar from \"./components/Navbar\"; // if you use a modern navbar (optional)\r\n\r\n// // Optional: Global state for user\r\n// function App() {\r\n//   const [user, setUser] = useState(null);\r\n\r\n//   return (\r\n//     <Router>\r\n//       {user && <Navbar user={user} setUser={setUser} />} {/* Hide navbar if not logged in */}\r\n//       <Routes>\r\n//         <Route path=\"/\" element={<Login onLogin={setUser} />} />\r\n//         <Route\r\n//           path=\"/inventory\"\r\n//           element={user ? <Inventory user={user} /> : <Navigate to=\"/\" />}\r\n//         />\r\n//         <Route\r\n//           path=\"/transfer\"\r\n//           element={user ? <Transfer user={user} /> : <Navigate to=\"/\" />}\r\n//         />\r\n//         <Route path=\"/about\" element={<About />} />\r\n//         {/* Fallback to login */}\r\n//         <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n//       </Routes>\r\n//     </Router>\r\n//   );\r\n// }\r\n// export default App;\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\nimport Inventory from \"./components/Inventory\";\r\nimport Transfer from \"./components/Transfer\";\r\nimport About from \"./components/About\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  return (\r\n    <Router>\r\n      {user && <Navbar user={user} setUser={setUser} />}\r\n      <Routes>\r\n        <Route path=\"/\" element={user ? <Navigate to=\"/inventory\" /> : <Login onLogin={setUser} />} />\r\n        <Route path=\"/inventory\" element={user ? <Inventory user={user} /> : <Navigate to=\"/\" />} />\r\n        <Route path=\"/transfer\" element={user ? <Transfer user={user} /> : <Navigate to=\"/\" />} />\r\n        <Route path=\"/about\" element={<About />} />\r\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}