{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rares Manolescu\\\\Desktop\\\\blockchain-property-app\\\\frontend\\\\src\\\\components\\\\Transfer.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import {\n//   getProvider,\n//   getMyNFTs,\n//   createBatchOffers,\n// } from \"../contractUtils\";\n\n// export default function Transfer({ user }) {\n//   const [address, setAddress] = useState(null);\n//   const [nfts, setNfts] = useState([]);\n//   const [selected, setSelected] = useState([]);\n//   const [to, setTo] = useState(\"\");\n//   const [amount, setAmount] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n\n//   // NEW: State for ETH-USD price\n//   const [ethUsd, setEthUsd] = useState(null);\n\n//   // Fetch ETH price in USD when component mounts\n//   useEffect(() => {\n//     async function fetchEthPrice() {\n//       try {\n//         const res = await fetch(\n//           \"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd\"\n//         );\n//         const data = await res.json();\n//         setEthUsd(data?.ethereum?.usd || null);\n//       } catch {\n//         setEthUsd(null);\n//       }\n//     }\n//     fetchEthPrice();\n//     // Optional: Refresh price every 2 min for accuracy\n//     const interval = setInterval(fetchEthPrice, 120000);\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       const provider = await getProvider();\n//       const signer = provider.getSigner();\n//       const userAddress = await signer.getAddress();\n//       setAddress(userAddress);\n//       setNfts(await getMyNFTs(userAddress));\n//     }\n//     fetchData();\n//   }, [user]);\n\n//   function toggleSelected(tokenId) {\n//     setSelected((prev) =>\n//       prev.includes(tokenId)\n//         ? prev.filter((id) => id !== tokenId)\n//         : [...prev, tokenId]\n//     );\n//   }\n\n//   async function handleCreateOffer(e) {\n//     e.preventDefault();\n//     if (!selected.length || !to || !amount) {\n//       setMessage(\"Select one or more assets, recipient, and amount.\");\n//       return;\n//     }\n//     setMessage(\"\");\n//     setLoading(true);\n//     try {\n//       await createBatchOffers(selected, to, amount);\n//       setMessage(\n//         selected.length > 1\n//           ? `Offers created for ${selected.length} items!`\n//           : \"Offer created!\"\n//       );\n//       setTo(\"\");\n//       setAmount(\"\");\n//       setSelected([]);\n//     } catch (err) {\n//       setMessage(\"Error: \" + (err?.message || err));\n//     } finally {\n//       setLoading(false);\n//     }\n//   }\n\n//   // Calculate USD value for the entered ETH amount\n//   const usdAmount =\n//     ethUsd && amount && !isNaN(Number(amount))\n//       ? (parseFloat(amount) * ethUsd).toLocaleString(\"en-US\", {\n//           style: \"currency\",\n//           currency: \"USD\",\n//           minimumFractionDigits: 2,\n//           maximumFractionDigits: 2,\n//         })\n//       : null;\n\n//   return (\n//     <div className=\"transfer-bg\">\n//       <div className=\"transfer-container\">\n//         <h1 className=\"transfer-title\">Send Trade Offer</h1>\n//         <div className=\"transfer-desc\">\n//           Select <b>one or more assets</b>, enter recipient wallet, and set price (ETH) to create offers.<br />\n//           Recipient must accept and pay for trade to complete!\n//         </div>\n//         <div className=\"transfer-card-list\">\n//           {nfts.map((nft) => (\n//             <div\n//               key={nft.tokenId}\n//               className={\n//                 \"transfer-card\" +\n//                 (selected.includes(nft.tokenId) ? \" selected\" : \"\")\n//               }\n//               onClick={() => toggleSelected(nft.tokenId)}\n//             >\n//               <div className=\"card-type\">\n//                 {nft.itemType === \"car\" ? \"üöó\" : \"üè†\"}\n//               </div>\n//               <div className=\"card-title animated-title\">{nft.name}</div>\n//               <div className=\"card-detail\">\n//                 {nft.itemType === \"car\"\n//                   ? `VIN: ${nft.vin}`\n//                   : `Address: ${nft.addr}`}\n//               </div>\n//               <div className=\"card-id\">NFT ID: {nft.tokenId}</div>\n//               {selected.includes(nft.tokenId) && (\n//                 <span className=\"card-selected-check\">‚úì</span>\n//               )}\n//             </div>\n//           ))}\n//         </div>\n//         <form onSubmit={handleCreateOffer} className=\"transfer-form\">\n//           <label htmlFor=\"to\" className=\"transfer-label\">\n//             Recipient Wallet Address\n//           </label>\n//           <input\n//             id=\"to\"\n//             className=\"transfer-input\"\n//             type=\"text\"\n//             placeholder=\"0x...\"\n//             value={to}\n//             onChange={(e) => setTo(e.target.value)}\n//             disabled={loading}\n//           />\n//           <label htmlFor=\"amount\" className=\"transfer-label\">\n//             Amount (ETH) <span style={{ color: \"#aaa\", fontSize: 13 }}>(for each item)</span>\n//           </label>\n//           <input\n//             id=\"amount\"\n//             className=\"transfer-input\"\n//             type=\"number\"\n//             step=\"0.0001\"\n//             min=\"0\"\n//             placeholder=\"Amount in ETH\"\n//             value={amount}\n//             onChange={(e) => setAmount(e.target.value)}\n//             disabled={loading}\n//           />\n//           {/* ETH to USD conversion shown here */}\n//           {amount && ethUsd && !isNaN(Number(amount)) && (\n//             <div\n//               style={{\n//                 fontSize: 15,\n//                 color: \"#226cf6\",\n//                 fontWeight: 600,\n//                 marginBottom: 6,\n//                 marginTop: -2,\n//                 letterSpacing: \"0.01em\",\n//               }}\n//             >\n//               ‚âà {usdAmount}\n//             </div>\n//           )}\n//           <button className=\"transfer-button-main\" type=\"submit\" disabled={loading}>\n//             {loading\n//               ? `Processing${selected.length > 1 ? ` ${selected.length}` : \"\"}...`\n//               : selected.length > 1\n//                 ? `Create ${selected.length} Offers`\n//                 : \"Create Offer\"}\n//           </button>\n//         </form>\n//         {message && (\n//           <div\n//             className={\n//               \"transfer-message\" +\n//               (message.startsWith(\"Error\") ? \" error\" : \"\")\n//             }\n//           >\n//             {message}\n//           </div>\n//         )}\n//       </div>\n//       {/* Your styles unchanged */}\n//       <style>{`\n//         .transfer-bg {\n//           min-height: 100vh;\n//           background: #f6f8fc;\n//           padding-bottom: 60px;\n//           font-family: 'Inter', system-ui, sans-serif;\n//         }\n//         .transfer-container {\n//           max-width: 1100px;\n//           margin: 44px auto 0 auto;\n//           padding: 0 18px;\n//         }\n//         .transfer-title {\n//           font-size: 2.2rem;\n//           font-weight: 900;\n//           margin-bottom: 9px;\n//           color: #23283b;\n//           letter-spacing: 0.01em;\n//         }\n//         .transfer-desc {\n//           margin-bottom: 32px;\n//           color: #5a6078;\n//           font-size: 1.17rem;\n//         }\n//         .transfer-card-list {\n//           display: flex;\n//           flex-wrap: wrap;\n//           gap: 28px;\n//           margin-bottom: 28px;\n//         }\n//         .transfer-card {\n//           background: #fff;\n//           border-radius: 16px;\n//           box-shadow: 0 2px 18px #edeef3;\n//           padding: 22px 23px 14px 22px;\n//           display: flex;\n//           flex-direction: column;\n//           align-items: flex-start;\n//           min-width: 215px;\n//           max-width: 260px;\n//           transition: box-shadow .15s, border .15s, transform .11s;\n//           border: 2.2px solid transparent;\n//           position: relative;\n//           cursor: pointer;\n//         }\n//         .transfer-card:hover {\n//           border: 2.2px solid #226cf6;\n//           box-shadow: 0 8px 28px #226cf619, 0 2px 12px #edeef322;\n//           transform: translateY(-4px) scale(1.02);\n//         }\n//         .transfer-card.selected {\n//           border: 2.2px solid #111 !important;\n//           box-shadow: 0 8px 36px #1113, 0 2px 14px #edeef111;\n//           background: #f7fafd !important;\n//         }\n//         .card-selected-check {\n//           position: absolute;\n//           top: 10px; right: 14px;\n//           background: #226cf6;\n//           color: #fff;\n//           border-radius: 100%;\n//           font-size: 1.15rem;\n//           font-weight: 700;\n//           width: 24px; height: 24px;\n//           display: flex; align-items: center; justify-content: center;\n//           box-shadow: 0 2px 8px #226cf622;\n//           border: 2.2px solid #fff;\n//           z-index: 2;\n//         }\n//         .card-type {\n//           font-size: 2rem;\n//           margin-bottom: 7px;\n//         }\n//         .card-title.animated-title {\n//           font-size: 1.1rem;\n//           font-weight: 700;\n//           color: #23283b;\n//           margin-bottom: 7px;\n//           letter-spacing: 0.02em;\n//           background: linear-gradient(90deg, #6366f1 40%, #0091ff 80%, #181a23 120%);\n//           background-size: 200% 100%;\n//           -webkit-background-clip: text;\n//           -webkit-text-fill-color: transparent;\n//         }\n//         @keyframes shimmer-casino {\n//           0% { background-position: 120% 0; }\n//           100% { background-position: -120% 0; }\n//         }\n//         .card-detail {\n//           color: #69718a;\n//           font-size: 1rem;\n//           margin-bottom: 3px;\n//         }\n//         .card-id {\n//           font-size: 0.93rem;\n//           color: #b0b2c3;\n//           margin-top: 6px;\n//         }\n//         .transfer-form {\n//           margin: 0 auto;\n//           max-width: 350px;\n//           display: flex; flex-direction: column; gap: 10px;\n//           background: #fff;\n//           padding: 20px 22px 17px 22px;\n//           border-radius: 14px;\n//           box-shadow: 0 1.5px 12px #edeef1;\n//           margin-bottom: 34px;\n//         }\n//         .transfer-label {\n//           font-weight: 600;\n//           margin-bottom: 2px;\n//           color: #23283b;\n//         }\n//         .transfer-input {\n//           padding: 7px 10px;\n//           border-radius: 7px;\n//           border: 1px solid #d1d5db;\n//           font-size: 1.07rem;\n//           margin-bottom: 7px;\n//           background: #fafcff;\n//           outline: none;\n//           transition: border .13s;\n//         }\n//         .transfer-input:focus {\n//           border: 1.5px solid #226cf6;\n//           background: #fff;\n//         }\n//         .transfer-button-main {\n//           background: linear-gradient(90deg,#226cf6,#17c9ff 120%);\n//           color: #fff;\n//           border: none;\n//           font-weight: 700;\n//           padding: 11px 0;\n//           border-radius: 10px;\n//           font-size: 1.13rem;\n//           margin-top: 8px;\n//           box-shadow: 0 1.5px 9px #226cf615;\n//           cursor: pointer;\n//           transition: background .17s,box-shadow .15s;\n//         }\n//         .transfer-button-main:disabled {\n//           opacity: 0.68;\n//           cursor: not-allowed;\n//         }\n//         .transfer-button-main:hover {\n//           background: linear-gradient(90deg,#111,#17c9ff 140%);\n//           box-shadow: 0 4px 16px #17c9ff17;\n//         }\n//         .transfer-message {\n//           margin-top: 28px;\n//           font-weight: 500;\n//           color: #2cb72c;\n//         }\n//         .transfer-message.error {\n//           color: #e44;\n//         }\n//         @media (max-width: 750px) {\n//           .transfer-card-list {\n//             flex-direction: column;\n//           }\n//           .transfer-container { padding: 0 2vw; }\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { getProvider, getMyNFTs, createBatchOffers } from \"../contractUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Transfer({\n  user\n}) {\n  _s();\n  const [address, setAddress] = useState(null);\n  const [nfts, setNfts] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [to, setTo] = useState(\"\");\n  const [amountUsd, setAmountUsd] = useState(\"\"); // now in USD\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [ethUsd, setEthUsd] = useState(null);\n\n  // Fetch ETH price in USD\n  useEffect(() => {\n    async function fetchEthPrice() {\n      try {\n        var _data$ethereum;\n        const res = await fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd\");\n        const data = await res.json();\n        setEthUsd((data === null || data === void 0 ? void 0 : (_data$ethereum = data.ethereum) === null || _data$ethereum === void 0 ? void 0 : _data$ethereum.usd) || null);\n      } catch {\n        setEthUsd(null);\n      }\n    }\n    fetchEthPrice();\n    const interval = setInterval(fetchEthPrice, 120000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Fetch NFTs\n  useEffect(() => {\n    async function fetchData() {\n      const provider = await getProvider();\n      const signer = provider.getSigner();\n      const userAddress = await signer.getAddress();\n      setAddress(userAddress);\n      setNfts(await getMyNFTs(userAddress));\n    }\n    fetchData();\n  }, [user]);\n  function toggleSelected(tokenId) {\n    setSelected(prev => prev.includes(tokenId) ? prev.filter(id => id !== tokenId) : [...prev, tokenId]);\n  }\n\n  // Convert USD to ETH\n  const amountEth = ethUsd && amountUsd && !isNaN(Number(amountUsd)) ? (parseFloat(amountUsd) / ethUsd).toFixed(6) : \"\";\n  async function handleCreateOffer(e) {\n    e.preventDefault();\n    if (!selected.length || !to || !amountUsd) {\n      setMessage(\"Select one or more assets, recipient, and amount.\");\n      return;\n    }\n    setMessage(\"\");\n    setLoading(true);\n    try {\n      // send ETH value to contract, not USD\n      await createBatchOffers(selected, to, amountEth);\n      setMessage(selected.length > 1 ? `Offers created for ${selected.length} items!` : \"Offer created!\");\n      setTo(\"\");\n      setAmountUsd(\"\");\n      setSelected([]);\n    } catch (err) {\n      setMessage(\"Error: \" + ((err === null || err === void 0 ? void 0 : err.message) || err));\n    } finally {\n      setLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transfer-bg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transfer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"transfer-title\",\n        children: \"Send Trade Offer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transfer-desc\",\n        children: [\"Select \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"one or more assets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 18\n        }, this), \", enter recipient wallet, and set price \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"(USD)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 83\n        }, this), \" to create offers.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 113\n        }, this), \"Recipient must accept and pay for trade to complete!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transfer-card-list\",\n        children: nfts.map(nft => {\n          var _nft$value;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transfer-card\" + (selected.includes(nft.tokenId) ? \" selected\" : \"\"),\n            onClick: () => toggleSelected(nft.tokenId),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-type\",\n              children: nft.itemType === \"car\" ? \"üöó\" : \"üè†\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-title animated-title\",\n              children: nft.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-detail\",\n              children: nft.itemType === \"car\" ? `VIN: ${nft.vin}` : `Address: ${nft.addr}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-value\",\n              style: {\n                fontWeight: 700,\n                color: \"#226cf6\",\n                marginBottom: 2\n              },\n              children: [\"Value: $\", ((_nft$value = nft.value) !== null && _nft$value !== void 0 ? _nft$value : 0).toLocaleString(\"en-US\"), \" USD\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-id\",\n              children: [\"NFT ID: \", nft.tokenId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this), selected.includes(nft.tokenId) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-selected-check\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this)]\n          }, nft.tokenId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreateOffer,\n        className: \"transfer-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"to\",\n          className: \"transfer-label\",\n          children: \"Recipient Wallet Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"to\",\n          className: \"transfer-input\",\n          type: \"text\",\n          placeholder: \"0x...\",\n          value: to,\n          onChange: e => setTo(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          className: \"transfer-label\",\n          children: [\"Amount (USD) \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"#aaa\",\n              fontSize: 13\n            },\n            children: \"(for each item)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"amount\",\n          className: \"transfer-input\",\n          type: \"number\",\n          step: \"0.01\",\n          min: \"0\",\n          placeholder: \"Amount in USD\",\n          value: amountUsd,\n          onChange: e => setAmountUsd(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), amountUsd && ethUsd && !isNaN(Number(amountUsd)) && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 15,\n            color: \"#226cf6\",\n            fontWeight: 600,\n            marginBottom: 6,\n            marginTop: -2,\n            letterSpacing: \"0.01em\"\n          },\n          children: [\"\\u2248 \", amountEth, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"transfer-button-main\",\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? `Processing${selected.length > 1 ? ` ${selected.length}` : \"\"}...` : selected.length > 1 ? `Create ${selected.length} Offers` : \"Create Offer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transfer-message\" + (message.startsWith(\"Error\") ? \" error\" : \"\"),\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .transfer-bg {\n          min-height: 100vh;\n          background: #f6f8fc;\n          padding-bottom: 60px;\n          font-family: 'Inter', system-ui, sans-serif;\n        }\n        .transfer-container {\n          max-width: 1100px;\n          margin: 44px auto 0 auto;\n          padding: 0 18px;\n        }\n        .transfer-title {\n          font-size: 2.2rem;\n          font-weight: 900;\n          margin-bottom: 9px;\n          color: #23283b;\n          letter-spacing: 0.01em;\n        }\n        .transfer-desc {\n          margin-bottom: 32px;\n          color: #5a6078;\n          font-size: 1.17rem;\n        }\n        .transfer-card-list {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 28px;\n          margin-bottom: 28px;\n        }\n        .transfer-card {\n          background: #fff;\n          border-radius: 16px;\n          box-shadow: 0 2px 18px #edeef3;\n          padding: 22px 23px 14px 22px;\n          display: flex;\n          flex-direction: column;\n          align-items: flex-start;\n          min-width: 215px;\n          max-width: 260px;\n          transition: box-shadow .15s, border .15s, transform .11s;\n          border: 2.2px solid transparent;\n          position: relative;\n          cursor: pointer;\n        }\n        .transfer-card:hover {\n          border: 2.2px solid #226cf6;\n          box-shadow: 0 8px 28px #226cf619, 0 2px 12px #edeef322;\n          transform: translateY(-4px) scale(1.02);\n        }\n        .transfer-card.selected {\n          border: 2.2px solid #111 !important;\n          box-shadow: 0 8px 36px #1113, 0 2px 14px #edeef111;\n          background: #f7fafd !important;\n        }\n        .card-selected-check {\n          position: absolute;\n          top: 10px; right: 14px;\n          background: #226cf6;\n          color: #fff;\n          border-radius: 100%;\n          font-size: 1.15rem;\n          font-weight: 700;\n          width: 24px; height: 24px;\n          display: flex; align-items: center; justify-content: center;\n          box-shadow: 0 2px 8px #226cf622;\n          border: 2.2px solid #fff;\n          z-index: 2;\n        }\n        .card-type {\n          font-size: 2rem;\n          margin-bottom: 7px;\n        }\n        .card-title.animated-title {\n          font-size: 1.1rem;\n          font-weight: 700;\n          color: #23283b;\n          margin-bottom: 7px;\n          letter-spacing: 0.02em;\n          background: linear-gradient(90deg, #6366f1 40%, #0091ff 80%, #181a23 120%);\n          background-size: 200% 100%;\n          -webkit-background-clip: text;\n          -webkit-text-fill-color: transparent;\n        }\n        @keyframes shimmer-casino {\n          0% { background-position: 120% 0; }\n          100% { background-position: -120% 0; }\n        }\n        .card-detail {\n          color: #69718a;\n          font-size: 1rem;\n          margin-bottom: 3px;\n        }\n        .card-value {\n          font-size: 1.02rem;\n          margin-bottom: 3px;\n        }\n        .card-id {\n          font-size: 0.93rem;\n          color: #b0b2c3;\n          margin-top: 6px;\n        }\n        .transfer-form {\n          margin: 0 auto;\n          max-width: 350px;\n          display: flex; flex-direction: column; gap: 10px;\n          background: #fff;\n          padding: 20px 22px 17px 22px;\n          border-radius: 14px;\n          box-shadow: 0 1.5px 12px #edeef1;\n          margin-bottom: 34px;\n        }\n        .transfer-label {\n          font-weight: 600;\n          margin-bottom: 2px;\n          color: #23283b;\n        }\n        .transfer-input {\n          padding: 7px 10px;\n          border-radius: 7px;\n          border: 1px solid #d1d5db;\n          font-size: 1.07rem;\n          margin-bottom: 7px;\n          background: #fafcff;\n          outline: none;\n          transition: border .13s;\n        }\n        .transfer-input:focus {\n          border: 1.5px solid #226cf6;\n          background: #fff;\n        }\n        .transfer-button-main {\n          background: linear-gradient(90deg,#226cf6,#17c9ff 120%);\n          color: #fff;\n          border: none;\n          font-weight: 700;\n          padding: 11px 0;\n          border-radius: 10px;\n          font-size: 1.13rem;\n          margin-top: 8px;\n          box-shadow: 0 1.5px 9px #226cf615;\n          cursor: pointer;\n          transition: background .17s,box-shadow .15s;\n        }\n        .transfer-button-main:disabled {\n          opacity: 0.68;\n          cursor: not-allowed;\n        }\n        .transfer-button-main:hover {\n          background: linear-gradient(90deg,#111,#17c9ff 140%);\n          box-shadow: 0 4px 16px #17c9ff17;\n        }\n        .transfer-message {\n          margin-top: 28px;\n          font-weight: 500;\n          color: #2cb72c;\n        }\n        .transfer-message.error {\n          color: #e44;\n        }\n        @media (max-width: 750px) {\n          .transfer-card-list {\n            flex-direction: column;\n          }\n          .transfer-container { padding: 0 2vw; }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 447,\n    columnNumber: 5\n  }, this);\n}\n_s(Transfer, \"kHrvziqOO7AEIFYAQq6iNVEW6K0=\");\n_c = Transfer;\nvar _c;\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"names":["React","useEffect","useState","getProvider","getMyNFTs","createBatchOffers","jsxDEV","_jsxDEV","Transfer","user","_s","address","setAddress","nfts","setNfts","selected","setSelected","to","setTo","amountUsd","setAmountUsd","message","setMessage","loading","setLoading","ethUsd","setEthUsd","fetchEthPrice","_data$ethereum","res","fetch","data","json","ethereum","usd","interval","setInterval","clearInterval","fetchData","provider","signer","getSigner","userAddress","getAddress","toggleSelected","tokenId","prev","includes","filter","id","amountEth","isNaN","Number","parseFloat","toFixed","handleCreateOffer","e","preventDefault","length","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","nft","_nft$value","onClick","itemType","name","vin","addr","style","fontWeight","color","marginBottom","value","toLocaleString","onSubmit","htmlFor","type","placeholder","onChange","target","disabled","fontSize","step","min","marginTop","letterSpacing","startsWith","_c","$RefreshReg$"],"sources":["C:/Users/Rares Manolescu/Desktop/blockchain-property-app/frontend/src/components/Transfer.js"],"sourcesContent":["\r\n// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   getProvider,\r\n//   getMyNFTs,\r\n//   createBatchOffers,\r\n// } from \"../contractUtils\";\r\n\r\n// export default function Transfer({ user }) {\r\n//   const [address, setAddress] = useState(null);\r\n//   const [nfts, setNfts] = useState([]);\r\n//   const [selected, setSelected] = useState([]);\r\n//   const [to, setTo] = useState(\"\");\r\n//   const [amount, setAmount] = useState(\"\");\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   // NEW: State for ETH-USD price\r\n//   const [ethUsd, setEthUsd] = useState(null);\r\n\r\n//   // Fetch ETH price in USD when component mounts\r\n//   useEffect(() => {\r\n//     async function fetchEthPrice() {\r\n//       try {\r\n//         const res = await fetch(\r\n//           \"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd\"\r\n//         );\r\n//         const data = await res.json();\r\n//         setEthUsd(data?.ethereum?.usd || null);\r\n//       } catch {\r\n//         setEthUsd(null);\r\n//       }\r\n//     }\r\n//     fetchEthPrice();\r\n//     // Optional: Refresh price every 2 min for accuracy\r\n//     const interval = setInterval(fetchEthPrice, 120000);\r\n//     return () => clearInterval(interval);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       const provider = await getProvider();\r\n//       const signer = provider.getSigner();\r\n//       const userAddress = await signer.getAddress();\r\n//       setAddress(userAddress);\r\n//       setNfts(await getMyNFTs(userAddress));\r\n//     }\r\n//     fetchData();\r\n//   }, [user]);\r\n\r\n//   function toggleSelected(tokenId) {\r\n//     setSelected((prev) =>\r\n//       prev.includes(tokenId)\r\n//         ? prev.filter((id) => id !== tokenId)\r\n//         : [...prev, tokenId]\r\n//     );\r\n//   }\r\n\r\n//   async function handleCreateOffer(e) {\r\n//     e.preventDefault();\r\n//     if (!selected.length || !to || !amount) {\r\n//       setMessage(\"Select one or more assets, recipient, and amount.\");\r\n//       return;\r\n//     }\r\n//     setMessage(\"\");\r\n//     setLoading(true);\r\n//     try {\r\n//       await createBatchOffers(selected, to, amount);\r\n//       setMessage(\r\n//         selected.length > 1\r\n//           ? `Offers created for ${selected.length} items!`\r\n//           : \"Offer created!\"\r\n//       );\r\n//       setTo(\"\");\r\n//       setAmount(\"\");\r\n//       setSelected([]);\r\n//     } catch (err) {\r\n//       setMessage(\"Error: \" + (err?.message || err));\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   }\r\n\r\n//   // Calculate USD value for the entered ETH amount\r\n//   const usdAmount =\r\n//     ethUsd && amount && !isNaN(Number(amount))\r\n//       ? (parseFloat(amount) * ethUsd).toLocaleString(\"en-US\", {\r\n//           style: \"currency\",\r\n//           currency: \"USD\",\r\n//           minimumFractionDigits: 2,\r\n//           maximumFractionDigits: 2,\r\n//         })\r\n//       : null;\r\n\r\n//   return (\r\n//     <div className=\"transfer-bg\">\r\n//       <div className=\"transfer-container\">\r\n//         <h1 className=\"transfer-title\">Send Trade Offer</h1>\r\n//         <div className=\"transfer-desc\">\r\n//           Select <b>one or more assets</b>, enter recipient wallet, and set price (ETH) to create offers.<br />\r\n//           Recipient must accept and pay for trade to complete!\r\n//         </div>\r\n//         <div className=\"transfer-card-list\">\r\n//           {nfts.map((nft) => (\r\n//             <div\r\n//               key={nft.tokenId}\r\n//               className={\r\n//                 \"transfer-card\" +\r\n//                 (selected.includes(nft.tokenId) ? \" selected\" : \"\")\r\n//               }\r\n//               onClick={() => toggleSelected(nft.tokenId)}\r\n//             >\r\n//               <div className=\"card-type\">\r\n//                 {nft.itemType === \"car\" ? \"üöó\" : \"üè†\"}\r\n//               </div>\r\n//               <div className=\"card-title animated-title\">{nft.name}</div>\r\n//               <div className=\"card-detail\">\r\n//                 {nft.itemType === \"car\"\r\n//                   ? `VIN: ${nft.vin}`\r\n//                   : `Address: ${nft.addr}`}\r\n//               </div>\r\n//               <div className=\"card-id\">NFT ID: {nft.tokenId}</div>\r\n//               {selected.includes(nft.tokenId) && (\r\n//                 <span className=\"card-selected-check\">‚úì</span>\r\n//               )}\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//         <form onSubmit={handleCreateOffer} className=\"transfer-form\">\r\n//           <label htmlFor=\"to\" className=\"transfer-label\">\r\n//             Recipient Wallet Address\r\n//           </label>\r\n//           <input\r\n//             id=\"to\"\r\n//             className=\"transfer-input\"\r\n//             type=\"text\"\r\n//             placeholder=\"0x...\"\r\n//             value={to}\r\n//             onChange={(e) => setTo(e.target.value)}\r\n//             disabled={loading}\r\n//           />\r\n//           <label htmlFor=\"amount\" className=\"transfer-label\">\r\n//             Amount (ETH) <span style={{ color: \"#aaa\", fontSize: 13 }}>(for each item)</span>\r\n//           </label>\r\n//           <input\r\n//             id=\"amount\"\r\n//             className=\"transfer-input\"\r\n//             type=\"number\"\r\n//             step=\"0.0001\"\r\n//             min=\"0\"\r\n//             placeholder=\"Amount in ETH\"\r\n//             value={amount}\r\n//             onChange={(e) => setAmount(e.target.value)}\r\n//             disabled={loading}\r\n//           />\r\n//           {/* ETH to USD conversion shown here */}\r\n//           {amount && ethUsd && !isNaN(Number(amount)) && (\r\n//             <div\r\n//               style={{\r\n//                 fontSize: 15,\r\n//                 color: \"#226cf6\",\r\n//                 fontWeight: 600,\r\n//                 marginBottom: 6,\r\n//                 marginTop: -2,\r\n//                 letterSpacing: \"0.01em\",\r\n//               }}\r\n//             >\r\n//               ‚âà {usdAmount}\r\n//             </div>\r\n//           )}\r\n//           <button className=\"transfer-button-main\" type=\"submit\" disabled={loading}>\r\n//             {loading\r\n//               ? `Processing${selected.length > 1 ? ` ${selected.length}` : \"\"}...`\r\n//               : selected.length > 1\r\n//                 ? `Create ${selected.length} Offers`\r\n//                 : \"Create Offer\"}\r\n//           </button>\r\n//         </form>\r\n//         {message && (\r\n//           <div\r\n//             className={\r\n//               \"transfer-message\" +\r\n//               (message.startsWith(\"Error\") ? \" error\" : \"\")\r\n//             }\r\n//           >\r\n//             {message}\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//       {/* Your styles unchanged */}\r\n//       <style>{`\r\n//         .transfer-bg {\r\n//           min-height: 100vh;\r\n//           background: #f6f8fc;\r\n//           padding-bottom: 60px;\r\n//           font-family: 'Inter', system-ui, sans-serif;\r\n//         }\r\n//         .transfer-container {\r\n//           max-width: 1100px;\r\n//           margin: 44px auto 0 auto;\r\n//           padding: 0 18px;\r\n//         }\r\n//         .transfer-title {\r\n//           font-size: 2.2rem;\r\n//           font-weight: 900;\r\n//           margin-bottom: 9px;\r\n//           color: #23283b;\r\n//           letter-spacing: 0.01em;\r\n//         }\r\n//         .transfer-desc {\r\n//           margin-bottom: 32px;\r\n//           color: #5a6078;\r\n//           font-size: 1.17rem;\r\n//         }\r\n//         .transfer-card-list {\r\n//           display: flex;\r\n//           flex-wrap: wrap;\r\n//           gap: 28px;\r\n//           margin-bottom: 28px;\r\n//         }\r\n//         .transfer-card {\r\n//           background: #fff;\r\n//           border-radius: 16px;\r\n//           box-shadow: 0 2px 18px #edeef3;\r\n//           padding: 22px 23px 14px 22px;\r\n//           display: flex;\r\n//           flex-direction: column;\r\n//           align-items: flex-start;\r\n//           min-width: 215px;\r\n//           max-width: 260px;\r\n//           transition: box-shadow .15s, border .15s, transform .11s;\r\n//           border: 2.2px solid transparent;\r\n//           position: relative;\r\n//           cursor: pointer;\r\n//         }\r\n//         .transfer-card:hover {\r\n//           border: 2.2px solid #226cf6;\r\n//           box-shadow: 0 8px 28px #226cf619, 0 2px 12px #edeef322;\r\n//           transform: translateY(-4px) scale(1.02);\r\n//         }\r\n//         .transfer-card.selected {\r\n//           border: 2.2px solid #111 !important;\r\n//           box-shadow: 0 8px 36px #1113, 0 2px 14px #edeef111;\r\n//           background: #f7fafd !important;\r\n//         }\r\n//         .card-selected-check {\r\n//           position: absolute;\r\n//           top: 10px; right: 14px;\r\n//           background: #226cf6;\r\n//           color: #fff;\r\n//           border-radius: 100%;\r\n//           font-size: 1.15rem;\r\n//           font-weight: 700;\r\n//           width: 24px; height: 24px;\r\n//           display: flex; align-items: center; justify-content: center;\r\n//           box-shadow: 0 2px 8px #226cf622;\r\n//           border: 2.2px solid #fff;\r\n//           z-index: 2;\r\n//         }\r\n//         .card-type {\r\n//           font-size: 2rem;\r\n//           margin-bottom: 7px;\r\n//         }\r\n//         .card-title.animated-title {\r\n//           font-size: 1.1rem;\r\n//           font-weight: 700;\r\n//           color: #23283b;\r\n//           margin-bottom: 7px;\r\n//           letter-spacing: 0.02em;\r\n//           background: linear-gradient(90deg, #6366f1 40%, #0091ff 80%, #181a23 120%);\r\n//           background-size: 200% 100%;\r\n//           -webkit-background-clip: text;\r\n//           -webkit-text-fill-color: transparent;\r\n//         }\r\n//         @keyframes shimmer-casino {\r\n//           0% { background-position: 120% 0; }\r\n//           100% { background-position: -120% 0; }\r\n//         }\r\n//         .card-detail {\r\n//           color: #69718a;\r\n//           font-size: 1rem;\r\n//           margin-bottom: 3px;\r\n//         }\r\n//         .card-id {\r\n//           font-size: 0.93rem;\r\n//           color: #b0b2c3;\r\n//           margin-top: 6px;\r\n//         }\r\n//         .transfer-form {\r\n//           margin: 0 auto;\r\n//           max-width: 350px;\r\n//           display: flex; flex-direction: column; gap: 10px;\r\n//           background: #fff;\r\n//           padding: 20px 22px 17px 22px;\r\n//           border-radius: 14px;\r\n//           box-shadow: 0 1.5px 12px #edeef1;\r\n//           margin-bottom: 34px;\r\n//         }\r\n//         .transfer-label {\r\n//           font-weight: 600;\r\n//           margin-bottom: 2px;\r\n//           color: #23283b;\r\n//         }\r\n//         .transfer-input {\r\n//           padding: 7px 10px;\r\n//           border-radius: 7px;\r\n//           border: 1px solid #d1d5db;\r\n//           font-size: 1.07rem;\r\n//           margin-bottom: 7px;\r\n//           background: #fafcff;\r\n//           outline: none;\r\n//           transition: border .13s;\r\n//         }\r\n//         .transfer-input:focus {\r\n//           border: 1.5px solid #226cf6;\r\n//           background: #fff;\r\n//         }\r\n//         .transfer-button-main {\r\n//           background: linear-gradient(90deg,#226cf6,#17c9ff 120%);\r\n//           color: #fff;\r\n//           border: none;\r\n//           font-weight: 700;\r\n//           padding: 11px 0;\r\n//           border-radius: 10px;\r\n//           font-size: 1.13rem;\r\n//           margin-top: 8px;\r\n//           box-shadow: 0 1.5px 9px #226cf615;\r\n//           cursor: pointer;\r\n//           transition: background .17s,box-shadow .15s;\r\n//         }\r\n//         .transfer-button-main:disabled {\r\n//           opacity: 0.68;\r\n//           cursor: not-allowed;\r\n//         }\r\n//         .transfer-button-main:hover {\r\n//           background: linear-gradient(90deg,#111,#17c9ff 140%);\r\n//           box-shadow: 0 4px 16px #17c9ff17;\r\n//         }\r\n//         .transfer-message {\r\n//           margin-top: 28px;\r\n//           font-weight: 500;\r\n//           color: #2cb72c;\r\n//         }\r\n//         .transfer-message.error {\r\n//           color: #e44;\r\n//         }\r\n//         @media (max-width: 750px) {\r\n//           .transfer-card-list {\r\n//             flex-direction: column;\r\n//           }\r\n//           .transfer-container { padding: 0 2vw; }\r\n//         }\r\n//       `}</style>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getProvider,\r\n  getMyNFTs,\r\n  createBatchOffers,\r\n} from \"../contractUtils\";\r\n\r\nexport default function Transfer({ user }) {\r\n  const [address, setAddress] = useState(null);\r\n  const [nfts, setNfts] = useState([]);\r\n  const [selected, setSelected] = useState([]);\r\n  const [to, setTo] = useState(\"\");\r\n  const [amountUsd, setAmountUsd] = useState(\"\"); // now in USD\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [ethUsd, setEthUsd] = useState(null);\r\n\r\n  // Fetch ETH price in USD\r\n  useEffect(() => {\r\n    async function fetchEthPrice() {\r\n      try {\r\n        const res = await fetch(\r\n          \"https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd\"\r\n        );\r\n        const data = await res.json();\r\n        setEthUsd(data?.ethereum?.usd || null);\r\n      } catch {\r\n        setEthUsd(null);\r\n      }\r\n    }\r\n    fetchEthPrice();\r\n    const interval = setInterval(fetchEthPrice, 120000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Fetch NFTs\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const provider = await getProvider();\r\n      const signer = provider.getSigner();\r\n      const userAddress = await signer.getAddress();\r\n      setAddress(userAddress);\r\n      setNfts(await getMyNFTs(userAddress));\r\n    }\r\n    fetchData();\r\n  }, [user]);\r\n\r\n  function toggleSelected(tokenId) {\r\n    setSelected((prev) =>\r\n      prev.includes(tokenId)\r\n        ? prev.filter((id) => id !== tokenId)\r\n        : [...prev, tokenId]\r\n    );\r\n  }\r\n\r\n  // Convert USD to ETH\r\n  const amountEth =\r\n    ethUsd && amountUsd && !isNaN(Number(amountUsd))\r\n      ? (parseFloat(amountUsd) / ethUsd).toFixed(6)\r\n      : \"\";\r\n\r\n  async function handleCreateOffer(e) {\r\n    e.preventDefault();\r\n    if (!selected.length || !to || !amountUsd) {\r\n      setMessage(\"Select one or more assets, recipient, and amount.\");\r\n      return;\r\n    }\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n    try {\r\n      // send ETH value to contract, not USD\r\n      await createBatchOffers(selected, to, amountEth);\r\n      setMessage(\r\n        selected.length > 1\r\n          ? `Offers created for ${selected.length} items!`\r\n          : \"Offer created!\"\r\n      );\r\n      setTo(\"\");\r\n      setAmountUsd(\"\");\r\n      setSelected([]);\r\n    } catch (err) {\r\n      setMessage(\"Error: \" + (err?.message || err));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"transfer-bg\">\r\n      <div className=\"transfer-container\">\r\n        <h1 className=\"transfer-title\">Send Trade Offer</h1>\r\n        <div className=\"transfer-desc\">\r\n          Select <b>one or more assets</b>, enter recipient wallet, and set price <b>(USD)</b> to create offers.<br />\r\n          Recipient must accept and pay for trade to complete!\r\n        </div>\r\n        <div className=\"transfer-card-list\">\r\n          {nfts.map((nft) => (\r\n            <div\r\n              key={nft.tokenId}\r\n              className={\r\n                \"transfer-card\" +\r\n                (selected.includes(nft.tokenId) ? \" selected\" : \"\")\r\n              }\r\n              onClick={() => toggleSelected(nft.tokenId)}\r\n            >\r\n              <div className=\"card-type\">\r\n                {nft.itemType === \"car\" ? \"üöó\" : \"üè†\"}\r\n              </div>\r\n              <div className=\"card-title animated-title\">{nft.name}</div>\r\n              <div className=\"card-detail\">\r\n                {nft.itemType === \"car\"\r\n                  ? `VIN: ${nft.vin}`\r\n                  : `Address: ${nft.addr}`}\r\n              </div>\r\n              <div className=\"card-value\" style={{fontWeight: 700, color: \"#226cf6\", marginBottom: 2}}>\r\n                Value: ${(nft.value ?? 0).toLocaleString(\"en-US\")} USD\r\n              </div>\r\n              <div className=\"card-id\">NFT ID: {nft.tokenId}</div>\r\n              {selected.includes(nft.tokenId) && (\r\n                <span className=\"card-selected-check\">‚úì</span>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <form onSubmit={handleCreateOffer} className=\"transfer-form\">\r\n          <label htmlFor=\"to\" className=\"transfer-label\">\r\n            Recipient Wallet Address\r\n          </label>\r\n          <input\r\n            id=\"to\"\r\n            className=\"transfer-input\"\r\n            type=\"text\"\r\n            placeholder=\"0x...\"\r\n            value={to}\r\n            onChange={(e) => setTo(e.target.value)}\r\n            disabled={loading}\r\n          />\r\n          <label htmlFor=\"amount\" className=\"transfer-label\">\r\n            Amount (USD) <span style={{ color: \"#aaa\", fontSize: 13 }}>(for each item)</span>\r\n          </label>\r\n          <input\r\n            id=\"amount\"\r\n            className=\"transfer-input\"\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            min=\"0\"\r\n            placeholder=\"Amount in USD\"\r\n            value={amountUsd}\r\n            onChange={(e) => setAmountUsd(e.target.value)}\r\n            disabled={loading}\r\n          />\r\n          {/* USD to ETH conversion shown here */}\r\n          {amountUsd && ethUsd && !isNaN(Number(amountUsd)) && (\r\n            <div\r\n              style={{\r\n                fontSize: 15,\r\n                color: \"#226cf6\",\r\n                fontWeight: 600,\r\n                marginBottom: 6,\r\n                marginTop: -2,\r\n                letterSpacing: \"0.01em\",\r\n              }}\r\n            >\r\n              ‚âà {amountEth} ETH\r\n            </div>\r\n          )}\r\n          <button className=\"transfer-button-main\" type=\"submit\" disabled={loading}>\r\n            {loading\r\n              ? `Processing${selected.length > 1 ? ` ${selected.length}` : \"\"}...`\r\n              : selected.length > 1\r\n                ? `Create ${selected.length} Offers`\r\n                : \"Create Offer\"}\r\n          </button>\r\n        </form>\r\n        {message && (\r\n          <div\r\n            className={\r\n              \"transfer-message\" +\r\n              (message.startsWith(\"Error\") ? \" error\" : \"\")\r\n            }\r\n          >\r\n            {message}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {/* styles unchanged */}\r\n      <style>{`\r\n        .transfer-bg {\r\n          min-height: 100vh;\r\n          background: #f6f8fc;\r\n          padding-bottom: 60px;\r\n          font-family: 'Inter', system-ui, sans-serif;\r\n        }\r\n        .transfer-container {\r\n          max-width: 1100px;\r\n          margin: 44px auto 0 auto;\r\n          padding: 0 18px;\r\n        }\r\n        .transfer-title {\r\n          font-size: 2.2rem;\r\n          font-weight: 900;\r\n          margin-bottom: 9px;\r\n          color: #23283b;\r\n          letter-spacing: 0.01em;\r\n        }\r\n        .transfer-desc {\r\n          margin-bottom: 32px;\r\n          color: #5a6078;\r\n          font-size: 1.17rem;\r\n        }\r\n        .transfer-card-list {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 28px;\r\n          margin-bottom: 28px;\r\n        }\r\n        .transfer-card {\r\n          background: #fff;\r\n          border-radius: 16px;\r\n          box-shadow: 0 2px 18px #edeef3;\r\n          padding: 22px 23px 14px 22px;\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: flex-start;\r\n          min-width: 215px;\r\n          max-width: 260px;\r\n          transition: box-shadow .15s, border .15s, transform .11s;\r\n          border: 2.2px solid transparent;\r\n          position: relative;\r\n          cursor: pointer;\r\n        }\r\n        .transfer-card:hover {\r\n          border: 2.2px solid #226cf6;\r\n          box-shadow: 0 8px 28px #226cf619, 0 2px 12px #edeef322;\r\n          transform: translateY(-4px) scale(1.02);\r\n        }\r\n        .transfer-card.selected {\r\n          border: 2.2px solid #111 !important;\r\n          box-shadow: 0 8px 36px #1113, 0 2px 14px #edeef111;\r\n          background: #f7fafd !important;\r\n        }\r\n        .card-selected-check {\r\n          position: absolute;\r\n          top: 10px; right: 14px;\r\n          background: #226cf6;\r\n          color: #fff;\r\n          border-radius: 100%;\r\n          font-size: 1.15rem;\r\n          font-weight: 700;\r\n          width: 24px; height: 24px;\r\n          display: flex; align-items: center; justify-content: center;\r\n          box-shadow: 0 2px 8px #226cf622;\r\n          border: 2.2px solid #fff;\r\n          z-index: 2;\r\n        }\r\n        .card-type {\r\n          font-size: 2rem;\r\n          margin-bottom: 7px;\r\n        }\r\n        .card-title.animated-title {\r\n          font-size: 1.1rem;\r\n          font-weight: 700;\r\n          color: #23283b;\r\n          margin-bottom: 7px;\r\n          letter-spacing: 0.02em;\r\n          background: linear-gradient(90deg, #6366f1 40%, #0091ff 80%, #181a23 120%);\r\n          background-size: 200% 100%;\r\n          -webkit-background-clip: text;\r\n          -webkit-text-fill-color: transparent;\r\n        }\r\n        @keyframes shimmer-casino {\r\n          0% { background-position: 120% 0; }\r\n          100% { background-position: -120% 0; }\r\n        }\r\n        .card-detail {\r\n          color: #69718a;\r\n          font-size: 1rem;\r\n          margin-bottom: 3px;\r\n        }\r\n        .card-value {\r\n          font-size: 1.02rem;\r\n          margin-bottom: 3px;\r\n        }\r\n        .card-id {\r\n          font-size: 0.93rem;\r\n          color: #b0b2c3;\r\n          margin-top: 6px;\r\n        }\r\n        .transfer-form {\r\n          margin: 0 auto;\r\n          max-width: 350px;\r\n          display: flex; flex-direction: column; gap: 10px;\r\n          background: #fff;\r\n          padding: 20px 22px 17px 22px;\r\n          border-radius: 14px;\r\n          box-shadow: 0 1.5px 12px #edeef1;\r\n          margin-bottom: 34px;\r\n        }\r\n        .transfer-label {\r\n          font-weight: 600;\r\n          margin-bottom: 2px;\r\n          color: #23283b;\r\n        }\r\n        .transfer-input {\r\n          padding: 7px 10px;\r\n          border-radius: 7px;\r\n          border: 1px solid #d1d5db;\r\n          font-size: 1.07rem;\r\n          margin-bottom: 7px;\r\n          background: #fafcff;\r\n          outline: none;\r\n          transition: border .13s;\r\n        }\r\n        .transfer-input:focus {\r\n          border: 1.5px solid #226cf6;\r\n          background: #fff;\r\n        }\r\n        .transfer-button-main {\r\n          background: linear-gradient(90deg,#226cf6,#17c9ff 120%);\r\n          color: #fff;\r\n          border: none;\r\n          font-weight: 700;\r\n          padding: 11px 0;\r\n          border-radius: 10px;\r\n          font-size: 1.13rem;\r\n          margin-top: 8px;\r\n          box-shadow: 0 1.5px 9px #226cf615;\r\n          cursor: pointer;\r\n          transition: background .17s,box-shadow .15s;\r\n        }\r\n        .transfer-button-main:disabled {\r\n          opacity: 0.68;\r\n          cursor: not-allowed;\r\n        }\r\n        .transfer-button-main:hover {\r\n          background: linear-gradient(90deg,#111,#17c9ff 140%);\r\n          box-shadow: 0 4px 16px #17c9ff17;\r\n        }\r\n        .transfer-message {\r\n          margin-top: 28px;\r\n          font-weight: 500;\r\n          color: #2cb72c;\r\n        }\r\n        .transfer-message.error {\r\n          color: #e44;\r\n        }\r\n        @media (max-width: 750px) {\r\n          .transfer-card-list {\r\n            flex-direction: column;\r\n          }\r\n          .transfer-container { padding: 0 2vw; }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}